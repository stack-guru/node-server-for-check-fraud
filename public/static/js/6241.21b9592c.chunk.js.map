{"version":3,"file":"static/js/6241.21b9592c.chunk.js","mappings":"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","sources":["Data/Pages/Forms/FormAdvanceData/DataFormAdvanced.jsx","Layouts/PageHeader/PageHeader.module.scss","Layouts/PageHeader/PageHeader.jsx"],"sourcesContent":["import React, { useState, Component } from 'react';\r\nimport {DropzoneArea} from 'material-ui-dropzone';\r\nimport Dropzone from \"react-dropzone\";\r\nimport Select from 'react-select';\r\nimport makeAnimated from \"react-select/animated\";\r\nimport {Compact} from '@uiw/react-color';\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport TextField from '@mui/material/TextField';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Stack from '@mui/material/Stack';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport DualListBox from 'react-dual-listbox';\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport { ChromePicker, SketchPicker } from \"react-color\";\r\nimport { Button } from 'react-bootstrap';\r\nimport ColorLensIcon from '@mui/icons-material/ColorLens';\r\nimport 'react-drop-zone/dist/styles.css'\r\n\r\nimport {useDropzone} from 'react-dropzone';\r\n\r\n// File Upload 1\r\n\r\nexport function FileUpload() {\r\n  const [fileNames, setFileNames] = useState([]);\r\n  const handleDrop = acceptedFiles =>\r\n    setFileNames(acceptedFiles.map(file => file.name));\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Dropzone onDrop={handleDrop} >\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div {...getRootProps({ className: \"dropzone\" })}>\r\n            <input {...getInputProps()} />\r\n            <p className='mt-5'>Drag and Drop a file here or Click</p>\r\n          </div>\r\n        )}\r\n      </Dropzone>\r\n      <div className=\"dropzone-main\">\r\n        <strong>Files:</strong>\r\n        <ul>\r\n          {fileNames.map(fileName => (\r\n            <li key={fileName}>{fileName}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// File Upload 2\r\n\r\nexport class FileuploadCustomised extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      files: []\r\n    };\r\n  }\r\n  handleChange(files) {\r\n    this.setState({\r\n      files: files\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <DropzoneArea\r\n        acceptedFiles={['image/*']}\r\n        onChange={this.handleChange.bind(this)}\r\n        showFileNames\r\n        dropzoneText=\"Drag and Drop a file here or Click\"\r\n        showAlerts={true}\r\n        filesLimit={20}\r\n\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n// File Upload 3\r\n\r\n\r\nexport function DisabledFileDropZone() {\r\n  const setFileNames = useState;\r\n  const handleDrop = acceptedFiles =>\r\n    setFileNames(acceptedFiles.map(file => file.name));\r\n  return (\r\n\r\n    <div className=\"App\">\r\n      <Dropzone onDrop={handleDrop} disabled>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div {...getRootProps({ className: \"dropzone\" })}>\r\n            <input {...getInputProps()} />\r\n            <p className='disable-dropzone'>Drag and Drop a file here or Click</p>\r\n          </div>\r\n        )}\r\n      </Dropzone>\r\n    </div>\r\n  )\r\n}\r\n\r\n// Multiple Filedropzone\r\n\r\nexport class CustomFileuploader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      files: []\r\n    };\r\n  }\r\n  handleChange(files) {\r\n    this.setState({\r\n      files: files\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <DropzoneArea\r\n        acceptedFiles={['image/*']}\r\n        onChange={this.handleChange.bind(this)}\r\n        showFileNames\r\n        showAlerts={true}\r\n        filesLimit={100}\r\n        dropzoneText=\"Drag and Drop a file here or Click\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// Select2 elements START\r\n\r\n// Basic\r\n\r\nconst options = [\r\n  { value: 'Choose one', label: 'Choose one', isDisabled: \"true\" },\r\n  { value: 'Chuck Testa', label: 'Chuck Testa' },\r\n  { value: 'Sage Cattabriga-Alosa', label: 'Sage Cattabriga-Alosa' },\r\n  { value: 'Nikola Tesla', label: 'Nikola Tesla' },\r\n  { value: 'Cattabriga-Alosa', label: 'Cattabriga-Alosa' },\r\n  { value: 'Nikola Alosa', label: 'Nikola Alosa' },\r\n\r\n];\r\n\r\nexport class BasicSelect extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Select\r\n        options={options}\r\n        placeholder='choose one'\r\n        classNamePrefix='Select'\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n// Basic Select2\r\n\r\nexport const CitiesData = [\r\n  { value: 'Arizona', label: 'Arizona', isDisabled: \"true\" },\r\n  { value: 'Colorado', label: 'Colorado' },\r\n  { value: 'Idaho', label: 'Idaho' },\r\n  { value: 'Montana', label: 'Montana' },\r\n  { value: 'New Mexico', label: 'New Mexico' },\r\n  { value: 'North Dakota', label: 'North Dakota' },\r\n  { value: 'Utah', label: 'Utah' },\r\n  { value: 'Wyoming', label: 'Wyoming' },\r\n];\r\n\r\nexport const TimeZone = [\r\n  { value: 'Alabama', label: 'Alabama' },\r\n  { value: 'Arkansas', label: 'Arkansas' },\r\n  { value: 'Illinois', label: 'Illinois' },\r\n  { value: 'Iowa', label: 'Iowa' },\r\n  { value: 'Kansas', label: 'Kansas' },\r\n  { value: 'Kentucky', label: 'Kentucky' },\r\n  { value: 'Louisiana', label: 'Louisiana' },\r\n  { value: 'Minnesota', label: 'Minnesota' },\r\n  { value: 'Mississippi', label: 'Mississippi' },\r\n  { value: 'Missouri', label: 'Missouri' },\r\n  { value: 'Oklahoma', label: 'Oklahoma' },\r\n  { value: 'South Dakota', label: 'South Dakota' },\r\n  { value: 'Texas', label: 'Texas' },\r\n  { value: 'Tennessee', label: 'Tennessee' },\r\n  { value: 'Wisconsin', label: 'Wisconsin' },\r\n];\r\n\r\nexport const groupedOptions = [\r\n  {\r\n    label: 'Cities',\r\n    options: CitiesData,\r\n  },\r\n  {\r\n    label: 'Central-TimeZone',\r\n    options: TimeZone,\r\n  },\r\n];\r\n\r\nexport class BasicSelectCustom extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Select\r\n        options={groupedOptions}\r\n        classNamePrefix='Select'\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n// Basic Select3\r\n\r\nexport const Data = [\r\n  { value: 'Arizona', label: 'Arizona', isDisabled: \"false\" },\r\n  { value: 'Colorado', label: 'Colorado' },\r\n  { value: 'Idaho', label: 'Idaho' },\r\n  { value: 'Montana', label: 'Montana' },\r\n  { value: 'New Mexico', label: 'New Mexico' },\r\n  { value: 'North Dakota', label: 'North Dakota' },\r\n  { value: 'Utah', label: 'Utah' },\r\n  { value: 'Wyoming', label: 'Wyoming' },\r\n  { value: 'Alabama', label: 'Alabama' },\r\n  { value: 'Arkansas', label: 'Arkansas' },\r\n  { value: 'Illinois', label: 'Illinois' },\r\n  { value: 'Iowa', label: 'Iowa' },\r\n  { value: 'Kansas', label: 'Kansas' },\r\n  { value: 'Kentucky', label: 'Kentucky' },\r\n  { value: 'Louisiana', label: 'Louisiana' },\r\n  { value: 'Minnesota', label: 'Minnesota' },\r\n  { value: 'Mississippi', label: 'Mississippi' },\r\n  { value: 'Missouri', label: 'Missouri' },\r\n  { value: 'Oklahoma', label: 'Oklahoma' },\r\n  { value: 'South Dakota', label: 'South Dakota' },\r\n  { value: 'Texas', label: 'Texas' },\r\n  { value: 'Tennessee', label: 'Tennessee' },\r\n  { value: 'Wisconsin', label: 'Wisconsin' },\r\n];\r\n\r\nexport class BasicSelectSearch extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Select\r\n        className=\"basic-single\"\r\n        classNamePrefix=\"Select\"\r\n        defaultValue={Data[0]}\r\n        name=\"color\"\r\n        options={Data}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n// User List\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nexport function Userslist() {\r\n  const option = [\r\n    { value: 'Firefox', label: 'Firefox' },\r\n    { value: 'Chrome', label: 'Chrome' },\r\n    { value: 'Safari', label: 'Safari' },\r\n    { value: 'Opera', label: 'Opera' },\r\n    { value: 'Internet Explorer', label: 'Internet Explorer' },\r\n  ]\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Select\r\n          closeMenuOnSelect={false}\r\n          components={animatedComponents}\r\n          defaultValue={2}\r\n          isMulti\r\n          options={option}\r\n          classNamePrefix=\"Select\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Select2 elements END\r\n\r\n// Time Picker START  \r\n\r\n// Default Time Picker\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      height: 40\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 150,\r\n    },\r\n  }),\r\n);\r\n\r\nexport function TimePickers() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.container} noValidate>\r\n      <TextField\r\n        label='Default Time Picker'\r\n        id=\"time\"\r\n        type=\"time\"\r\n        defaultValue=\"00:00\"\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        inputProps={{\r\n          step: 300,\r\n        }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\n\r\n\r\n// Basic Time picker2\r\n// Set the scroll position \r\n\r\nexport function BasicTimePicker() {\r\n\r\n  const [value, setValue] = useState(null);\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <TimePicker\r\n        label='Set the scroll position'\r\n        value={value}\r\n        onChange={(newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        renderInput={(params) => <TextField {...params} />}\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n\r\n// Dynamically Time picker\r\n\r\nexport function DynamicTimePicker() {\r\n  const [value, setValue] = useState(new Date());\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <Stack spacing={3}>\r\n        <TimePicker\r\n          label='Dynamic Time Picker'\r\n          ampm={false}\r\n          openTo=\"hours\"\r\n          views={['hours', 'minutes']}\r\n          inputFormat=\"HH:mm\"\r\n          mask=\"__:__\"\r\n          value={value}\r\n          onChange={(newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n\r\n      </Stack>\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n\r\n// Time Picker END\r\n\r\n// Color Picker START\r\n\r\n// Basic\r\n\r\nexport function BasicStyle() {\r\n  const [color, setColor] = useState('#6c5ffc')\r\n  const [showColorPicker, setShowColorPicker] = useState(false)\r\n\r\n\r\n  const handleChangeComplete = (color) => {\r\n    console.log(color)\r\n  };\r\n\r\n  return (\r\n\r\n    <div>\r\n      <p className=\" mb-1\">Same way you select color in Adobe Photoshop.</p>\r\n      <Button className='btn-pill' size='sm' onClick={() => setShowColorPicker(showColorPicker => !showColorPicker)}>{showColorPicker ? 'Close Color Picker' : 'Pick a Color'}</Button>\r\n      {showColorPicker && (<ChromePicker className='mt-3' disableAlpha={true} color={color} onChange={updatedColor => setColor(updatedColor.hex)} onChangeComplete={handleChangeComplete} />\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\n// SketchExample style\r\n\r\nexport class SketchExample extends Component {\r\n  state = {\r\n    displayColorPicker: false,\r\n    color: {\r\n      r: '241',\r\n      g: '112',\r\n      b: '19',\r\n      a: '1',\r\n    },\r\n  }\r\n  handleClick = () => {\r\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ displayColorPicker: false })\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    this.setState({ color: color.rgb })\r\n  };\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <p className=\"mt-4 mb-1\">Show Adove photoshop with Alphaline and pallete. </p>\r\n        <Button className='btn-pill' variant='primary' size='sm' onClick={this.handleClick}>\r\n          <ColorLensIcon />\r\n        </Button>\r\n        {this.state.displayColorPicker ? <div >\r\n          <div onClick={this.handleClose} />\r\n          <SketchPicker className='mt-3' color={this.state.color} onChange={this.handleChange} />\r\n        </div> : null}\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n// Palettes Style\r\n\r\nexport function PalettesStyle() {\r\n  const [hex, setHex] = useState(\"#fff\");\r\n  return (\r\n    <div>\r\n      <p className=\"mt-4 mb-1\">Show pallete only. If you'd like, spectrum can show the palettes you specify, and nothing else.</p>\r\n      <Compact\r\n        color={hex}\r\n        onChange={(color) => {\r\n          setHex(color.hex);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n// Color Picker END\r\n\r\n// Styled Color Picker START\r\n\r\n\r\n// Styled Color Picker END\r\n\r\n// Date, Month, Year Range Picker START\r\n\r\n// Date\r\n\r\nexport function BasicDatePicker() {\r\n  const [value, setValue] = useState(null);\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <DatePicker\r\n        label=\"Date Range\"\r\n        value={value}\r\n        onChange={(newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        renderInput={(params) => <TextField {...params} />}\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n\r\n// Month\r\n\r\n\r\nexport function MonthPicker() {\r\n  const [value, setValue] = useState(new Date());\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <DatePicker\r\n        views={['month']}\r\n        label=\"Month Range\"\r\n        minDate={new Date('2012-03-01')}\r\n        maxDate={new Date('2023-06-01')}\r\n        value={value}\r\n        onChange={(newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        renderInput={(params) => <TextField {...params} helperText={null} />}\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n\r\n\r\nexport function YearPicker() {\r\n  const [value, setValue] = useState(new Date());\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <DatePicker\r\n        views={['year']}\r\n        label=\"Year Range\"\r\n        value={value}\r\n        onChange={(newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        renderInput={(params) => <TextField {...params} helperText={null} />}\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n\r\n// Date, Month, Year Range Picker END\r\n\r\n// Default Date picker\r\n\r\nexport function DefaultDatePicker() {\r\n  const [value, setValue] = useState(null);\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <DatePicker\r\n        label=\"Date Range\"\r\n        value={value}\r\n        onChange={(newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        renderInput={(params) => <TextField {...params} />}\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n\r\n\r\nconst optionss = [\r\n  {\r\n    label: 'Java Script',\r\n    options: [\r\n      { value: 'Jquery', label: 'Jquery' },\r\n      { value: 'Angular JS', label: 'Angular JS' },\r\n      { value: 'React JS', label: 'React JS' },\r\n      { value: 'Vue JS', label: 'Vue JS' }\r\n    ],\r\n  },\r\n  {\r\n    label: 'Popular',\r\n    options: [\r\n      { value: 'Java Script', label: 'Java Script' },\r\n      { value: 'Java', label: 'Java' },\r\n      { value: 'Python', label: 'Python' },\r\n      { value: 'TypeScript', label: 'TypeScript' },\r\n      { value: 'PHP', label: 'PHP' },\r\n      { value: 'Ruby on Rails', label: 'Ruby on Rails' },\r\n    ],\r\n  }\r\n];\r\n\r\nexport class DualList extends Component {\r\n  state = {\r\n    selected: [options[0]],\r\n  };\r\n\r\n  onChange = (selected) => {\r\n    console.log(selected);\r\n    this.setState({ selected });\r\n  };\r\n\r\n  render() {\r\n    const { selected } = this.state;\r\n\r\n    return (\r\n      <DualListBox\r\n        options={optionss}\r\n        selected={selected}\r\n        allowDuplicates\r\n        simpleValue={false}\r\n        onChange={this.onChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n// Dual List Box END\r\n\r\n// Select Box START\r\n\r\n// Box 1\r\n\r\nexport function SelectBox() {\r\n  let [value, setValue] = useState([\"\"]);\r\n  function handleChange(selected) {\r\n    setValue(selected);\r\n    console.log(selected);\r\n  }\r\n  const options = [\r\n\r\n    { value: \"HTML5\", label: \"HTML5\" },\r\n    { value: \"CSS 3\", label: \"CSS 3\" },\r\n    { value: \"PHP\", label: \"PHP\" },\r\n    { value: \"J-Query\", label: \"J-Query\" },\r\n    { value: \".Net\", label: \".Net\" },\r\n    { value: \"Java\", label: \"Java\" },\r\n    { value: \"Android\", label: \"Android\" },\r\n    { value: \"React JS\", label: \"React JS\" },\r\n    { value: \"Angular JS\", label: \"Angular JS\" },\r\n    { value: \"PhotoShop\", label: \"PhotoShop\" },\r\n    { value: \"Python\", label: \"Python\" },\r\n    { value: \"Sql\", label: \"Sql\" },\r\n    { value: \"JavaScript\", label: \"JavaScript\" }\r\n  ];\r\n\r\n\r\n  return (\r\n    <DualListBox\r\n      canFilter\r\n      selected={value}\r\n      options={options}\r\n      filterCallback={(option, filterInput) => {\r\n        if (filterInput === \"\") {\r\n          return true;\r\n        }\r\n        console.log(option);\r\n        // return containsWord(option.label, filterInput);\r\n        let words = filterInput.split(\" \");\r\n        let res = false;\r\n        for (let word of words) {\r\n          console.log(word);\r\n          res = new RegExp(word, \"i\").test(option.label);\r\n          if (res === false) {\r\n            break;\r\n          }\r\n        }\r\n        return res;\r\n      }}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n\r\n// Box 2\r\n\r\nexport function SelectBoxwithLabel() {\r\n  let [value, setValue] = useState([\"\"]);\r\n  function handleChange(selected) {\r\n    setValue(selected);\r\n    console.log(selected);\r\n  }\r\n  const options = [\r\n    {\r\n      label: \"Software Side\",\r\n      options: [\r\n        { value: \"Web designer\", label: \"Web designer\" },\r\n        {\r\n          value: \"Web Developer\",\r\n          label: \"Web Developer\"\r\n        },\r\n        {\r\n          value: \"Application Developer\",\r\n          label: \"Application Developer\"\r\n        },\r\n        {\r\n          value: \"App Designer\",\r\n          label: \"App Designer\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      label: \"Voice Side\",\r\n      options: [\r\n        { value: \"Tell Caller\", label: \"Tell Caller\" },\r\n        {\r\n          value: \"Recruiter\",\r\n          label: \"Recruiter\"\r\n        },\r\n        {\r\n          value: \"HR\",\r\n          label: \"HR\"\r\n        },\r\n        {\r\n          value: \"Data Entry\",\r\n          label: \"Data Entry\"\r\n        },\r\n        {\r\n          value: \"Mapping\",\r\n          label: \"Mapping\"\r\n        },\r\n        {\r\n          value: \"US Recruiter\",\r\n          label: \"US Recruiter\"\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <DualListBox\r\n      canFilter\r\n      selected={value}\r\n      options={options}\r\n      filterCallback={(option, filterInput) => {\r\n        if (filterInput === \"\") {\r\n          return true;\r\n        }\r\n        console.log(option);\r\n        // return containsWord(option.label, filterInput);\r\n        let words = filterInput.split(\" \");\r\n        let res = false;\r\n        for (let word of words) {\r\n          console.log(word);\r\n          res = new RegExp(word, \"i\").test(option.label);\r\n          if (res === false) {\r\n            break;\r\n          }\r\n        }\r\n        return res;\r\n      }}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n\r\n// Select Box END\r\n\r\n// Country selectorinterface StyledProps \r\n\r\nexport const CountrySelector = () => {\r\n  return (\r\n    <div>\r\n      <PhoneInput\r\n        country={\"us\"}\r\n        value=\"1425652\"\r\n        onChange={phone => console.log({ phone })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n//Disabled Dropzone\r\n\r\nexport function DropzoneDisabled (props) {\r\n  const { getRootProps, getInputProps} = useDropzone({\r\n    disabled: true\r\n  });\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <div {...getRootProps({className: 'dropzone file_upload disabled'})}>\r\n        <input {...getInputProps()} />\r\n        <p><del>Drag 'n' drop some files here, or click to select files</del></p>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\n\r\n// Basic file upload\r\n\r\nexport function BasicfileUpload (props) {\r\n  const {acceptedFiles, getRootProps, getInputProps} = useDropzone();\r\n  \r\n  const files = acceptedFiles.map(file => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <section className=\"container file_upload\">\r\n      <div {...getRootProps({className: 'dropzone file_upload'})}>\r\n        <input {...getInputProps()} />\r\n        <p>Drag 'n' drop some files here, or click to select files</p>\r\n      </div>\r\n      <aside className='dropzone-main'>\r\n        <h4 className='mb-0'>Files</h4>\r\n        <ul>{files}</ul>\r\n      </aside>\r\n    </section>\r\n  );\r\n}\r\n\r\n//Specific file upload\r\n\r\nexport function SpecificFile (props) {\r\n  const {\r\n    acceptedFiles,\r\n    fileRejections,\r\n    getRootProps,\r\n    getInputProps\r\n  } = useDropzone({\r\n    accept: {\r\n      'image/jpeg': [],\r\n      'image/png': []\r\n    }\r\n  });\r\n\r\n  const acceptedFileItems = acceptedFiles.map(file => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n    </li>\r\n  ));\r\n\r\n  const fileRejectionItems = fileRejections.map(({ file, errors }) => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n      <ul>\r\n        {errors.map(e => (\r\n          <li key={e.code}>{e.message}</li>\r\n        ))}\r\n      </ul>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <section className=\"\">\r\n      <div {...getRootProps({ className: 'dropzone specificFile' })}>\r\n        <input {...getInputProps()} />\r\n        <p>Drag 'n' drop some files here, or click to select files</p>\r\n        <em>(Only *.jpeg and *.png images will be accepted)</em>\r\n      </div>\r\n      <aside>\r\n        <h4>Accepted files</h4>\r\n        <ul>{acceptedFileItems}</ul>\r\n        <h4>Rejected files</h4>\r\n        <ul>{fileRejectionItems}</ul>\r\n      </aside>\r\n    </section>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport styles from './PageHeader.module.scss';\nimport { Breadcrumb } from 'react-bootstrap';\n\nconst PageHeader = (props) => {\n\n  return (\n\n    <div className={styles.PageHeader}>\n      {/* <!-- PAGE-HEADER --> */}\n      <div className=\"page-header\">\n        <h1 className=\"page-title\">{props.titles}</h1>\n        <div>\n          <Breadcrumb>\n          {props.items.map((value, index) => {\n          return<Breadcrumb.Item href=\"#\" key={index}>{value}</Breadcrumb.Item>\n        })}\n        <Breadcrumb.Item href=\"#\" active>{props.active}</Breadcrumb.Item>\n          </Breadcrumb>\n        </div>\n      </div>\n      {/* <!-- PAGE-HEADER END --> */}\n    </div>\n  )\n};\n\nexport default PageHeader;\n"],"names":["FileuploadCustomised","props","state","files","this","setState","acceptedFiles","onChange","handleChange","bind","showFileNames","dropzoneText","showAlerts","filesLimit","Component","options","value","label","isDisabled","makeAnimated","makeStyles","theme","createStyles","container","display","flexWrap","height","textField","marginLeft","spacing","marginRight","width","SketchExample","displayColorPicker","color","r","g","b","a","handleClick","handleClose","rgb","className","variant","size","onClick","optionss","DualList","selected","console","log","allowDuplicates","simpleValue","SelectBox","useState","setValue","canFilter","filterCallback","option","filterInput","words","split","res","word","RegExp","test","SelectBoxwithLabel","CountrySelector","country","phone","DropzoneDisabled","useDropzone","disabled","getRootProps","getInputProps","BasicfileUpload","map","file","path","SpecificFile","accept","fileRejections","acceptedFileItems","fileRejectionItems","errors","e","message","code","styles","titles","Breadcrumb","items","index","href","active"],"sourceRoot":""}
{"version":3,"file":"static/js/966.72d8595d.chunk.js","mappings":"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","sources":["Layouts/PageHeader/PageHeader.module.scss","Layouts/PageHeader/PageHeader.jsx","components/bootstrap/BadgesPills/BadgesPills.module.scss","components/bootstrap/BadgesPills/BadgesPills.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport styles from './PageHeader.module.scss';\nimport { Breadcrumb } from 'react-bootstrap';\n\nconst PageHeader = (props) => {\n\n  return (\n\n    <div className={styles.PageHeader}>\n      {/* <!-- PAGE-HEADER --> */}\n      <div className=\"page-header\">\n        <h1 className=\"page-title\">{props.titles}</h1>\n        <div>\n          <Breadcrumb>\n          {props.items.map((value, index) => {\n          return<Breadcrumb.Item href=\"#\" key={index}>{value}</Breadcrumb.Item>\n        })}\n        <Breadcrumb.Item href=\"#\" active>{props.active}</Breadcrumb.Item>\n          </Breadcrumb>\n        </div>\n      </div>\n      {/* <!-- PAGE-HEADER END --> */}\n    </div>\n  )\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React, { useState } from 'react';\nimport { Badge, Button, Card, Row, Col, Form, Collapse } from 'react-bootstrap';\nimport PageHeader from '../../../Layouts/PageHeader/PageHeader';\nimport styles from './BadgesPills.module.scss';\n\n\nconst BadgesPills = () => {\n\n  const [Badges, setBadges] = useState(false);\n  const [Pill, setPill] = useState(false);\n  const [Gradient, setGradient] = useState(false);\n  const [Gradientpill, setGradientpill] = useState(false);\n  const [Buton, setButon] = useState(false);\n  const [Rounded, setRounded] = useState(false);\n  const [Heading, setHeading] = useState(false);\n  const [color, setcolor] = useState(false);\n\n  return (\n  <div className={styles.BadgesPills}>\n    <PageHeader titles=\"Badges\" active=\"Badges\" items={['Componets']} />\n    {/* <!-- ROW-1 OPEN --> */}\n    <Row>\n      <Col md={12} lg={6}>\n        <Card>\n          <Card.Header>\n            <Card.Title>Badges</Card.Title>\n              <Form className=\"ms-auto\">\n                <Form.Check type=\"switch\" label=\"Show Code\" id=\"custom-switch\" onClick={() => setBadges(!Badges)} className=\"showcode d-flex ms-auto mx-2\" />\n              </Form>\n          </Card.Header>\n          <Card.Body>\n            <p>Add any of the below mentioned modifier classes to change the appearance of a badge.</p>\n            <div className=\"example\">\n              <Badge bg=\"default\">Default</Badge> {' '}\n              <Badge bg=\"primary\">Primary</Badge>{' '}\n              <Badge bg=\"success\">Success</Badge>{' '}\n              <Badge bg=\"danger\">Danger</Badge>{' '}\n              <Badge bg=\"info\">Info</Badge>{' '}\n              <Badge bg=\"warning\">Warning</Badge>{' '}\n\n            </div>\n            <Collapse in={Badges} className=\"mt-2\">\n                <pre>\n                  <code>\n                    {`\n    <div className=\"example\">\n    <Badge bg=\"default\">Default</Badge> {' '}\n    <Badge bg=\"primary\">Primary</Badge>{' '}\n    <Badge bg=\"success\">Success</Badge>{' '}\n    <Badge bg=\"danger\">Danger</Badge>{' '}\n    <Badge bg=\"info\">Info</Badge>{' '}\n    <Badge bg=\"warning\">Warning</Badge>{' '}\n\n  </div>\n`}\n                  </code>\n                </pre>\n              </Collapse>\n          </Card.Body>\n        </Card>\n      </Col>\n      {/* <!-- COL-END --> */}\n      <Col md={12} lg={6}>\n        <Card>\n          <Card.Header>\n            <Card.Title>Pill Badges</Card.Title>\n              <Form className=\"ms-auto\">\n                <Form.Check type=\"switch\" label=\"Show Code\" id=\"custom-switch\" onClick={() => setPill(!Pill)} className=\"showcode d-flex ms-auto mx-2\" />\n              </Form>\n          </Card.Header>\n          <Card.Body>\n            <p className=\"text-muted card-sub-title\">Use the <code className=\"highlighter-rouge\">.rounded-pill</code> modifier className to make badges more rounded.</p>\n            <div className=\"example\">\n              <Badge pill bg=\"default\">Default</Badge> {' '}\n              <Badge pill bg=\"primary\">Primary</Badge>{' '}\n              <Badge pill bg=\"success\">Success</Badge>{' '}\n              <Badge pill bg=\"danger\">Danger</Badge>{' '}\n              <Badge pill bg=\"info\">Info</Badge>{' '}\n              <Badge pill bg=\"warning\">Warning</Badge>{' '}\n            </div>\n            <Collapse in={Pill} className=\"mt-2\">\n                <pre>\n                  <code>\n                    {`\n     <div className=\"example\">\n     <Badge pill bg=\"default\">Default</Badge> {' '}\n     <Badge pill bg=\"primary\">Primary</Badge>{' '}\n     <Badge pill bg=\"success\">Success</Badge>{' '}\n     <Badge pill bg=\"danger\">Danger</Badge>{' '}\n     <Badge pill bg=\"info\">Info</Badge>{' '}\n     <Badge pill bg=\"warning\">Warning</Badge>{' '}\n   </div>\n`}\n                  </code>\n                </pre>\n              </Collapse>\n          </Card.Body>\n        </Card>\n      </Col>\n      {/* <!-- COL-END --> */}\n      <Col md={12} lg={6}>\n        <Card>\n          <Card.Header>\n            <Card.Title>Gradient Badges</Card.Title>\n              <Form className=\"ms-auto\">\n                <Form.Check type=\"switch\" label=\"Show Code\" id=\"custom-switch\" onClick={() => setGradient(!Gradient)} className=\"showcode d-flex ms-auto mx-2\" />\n              </Form>\n          </Card.Header>\n          <Card.Body>\n            <p>Add any of the below mentioned modifier classes to change the appearance of a badge.</p>\n            <div className=\"example\">\n              <Badge bg=\"default\">Default</Badge> {' '}\n              <Badge bg=\"primary-gradient\">Primary</Badge>{' '}\n              <Badge bg=\"success-gradient\">Success</Badge>{' '}\n              <Badge bg=\"danger-gradient\">Danger</Badge>{' '}\n              <Badge bg=\"info-gradient\">Info</Badge>{' '}\n              <Badge bg=\"warning-gradient\">Warning</Badge>{' '}\n\n            </div>\n            <Collapse in={Gradient} className=\"mt-2\">\n                <pre>\n                  <code>\n                    {`\n    <div className=\"example\">\n    <Badge bg=\"default\">Default</Badge> {' '}\n    <Badge bg=\"primary-gradient\">Primary</Badge>{' '}\n    <Badge bg=\"success-gradient\">Success</Badge>{' '}\n    <Badge bg=\"danger-gradient\">Danger</Badge>{' '}\n    <Badge bg=\"info-gradient\">Info</Badge>{' '}\n    <Badge bg=\"warning-gradient\">Warning</Badge>{' '}\n\n  </div>\n`}\n                  </code>\n                </pre>\n              </Collapse>\n          </Card.Body>\n        </Card>\n      </Col>\n      {/* <!-- COL-END --> */}\n      <Col md={12} lg={6}>\n        <Card>\n          <Card.Header>\n            <Card.Title>Gradient Pill Badges</Card.Title>\n              <Form className=\"ms-auto\">\n                <Form.Check type=\"switch\" label=\"Show Code\" id=\"custom-switch\" onClick={() => setGradientpill(!Gradientpill)} className=\"showcode d-flex ms-auto mx-2\" />\n              </Form>\n          </Card.Header>\n          <Card.Body>\n            <p className=\"text-muted card-sub-title\">Use the <code className=\"highlighter-rouge\">.rounded-pill</code> modifier className to make badges more rounded.</p>\n            <div className=\"example\">\n              <Badge pill bg=\"default\">Default</Badge> {' '}\n              <Badge pill bg=\"primary-gradient\">Primary</Badge>{' '}\n              <Badge pill bg=\"success-gradient\">Success</Badge>{' '}\n              <Badge pill bg=\"danger-gradient\">Danger</Badge>{' '}\n              <Badge pill bg=\"info-gradient\">Info</Badge>{' '}\n              <Badge pill bg=\"warning-gradient\">Warning</Badge>{' '}\n            </div>\n            <Collapse in={Gradientpill} className=\"mt-2\">\n                <pre>\n                  <code>\n                    {`\n   <div className=\"example\">\n   <Badge pill bg=\"default\">Default</Badge> {' '}\n   <Badge pill bg=\"primary-gradient\">Primary</Badge>{' '}\n   <Badge pill bg=\"success-gradient\">Success</Badge>{' '}\n   <Badge pill bg=\"danger-gradient\">Danger</Badge>{' '}\n   <Badge pill bg=\"info-gradient\">Info</Badge>{' '}\n   <Badge pill bg=\"warning-gradient\">Warning</Badge>{' '}\n </div>\n\n`}\n                  </code>\n                </pre>\n              </Collapse>\n          </Card.Body>\n        </Card>\n      </Col>\n      {/* <!-- COL-END --> */}\n    </Row>\n    {/* <!-- ROW-1 CLOSED --> */}\n\n    {/* <!-- ROW-2 OPEN --> */}\n    <Row>\n      <Col xl={12}>\n        <Card>\n          <Card.Header>\n            <Card.Title>Buttons with Badges</Card.Title>\n              <Form className=\"ms-auto\">\n                <Form.Check type=\"switch\" label=\"Show Code\" id=\"custom-switch\" onClick={() => setButon(!Buton)} className=\"showcode d-flex ms-auto mx-2\" />\n              </Form>\n          </Card.Header>\n          <Card.Body>\n            <p>Badges can be used as part of links or buttons to provide a counter.</p>\n            <div className=\"example2\">\n\n              <Button className=\"mt-1  mb-1 me-3\" variant=\"primary\">Notifications<Badge bg=\"white\" className=\"text-primary ms-2\">2</Badge></Button>\n\n              <Button className=\"mt-1  mb-1 me-3\" variant=\"secondary\">Notifications<Badge bg=\"white\" className=\"text-secondary ms-2\">2</Badge></Button>\n\n              <Button className=\"mt-1  mb-1 me-3\" variant=\"success\">Notifications<Badge bg=\"white\" className=\"text-success ms-2\">2</Badge></Button>\n\n              <Button className=\"mt-1  mb-1 me-3\" variant=\"info\">Notifications<Badge bg=\"white\" className=\"text-info ms-2\">2</Badge></Button>\n\n              <Button className=\"mt-1  mb-1 me-3\" variant=\"warning\">Notifications<Badge bg=\"white\" className=\"text-warning ms-2\">2</Badge></Button>\n\n              <Button className=\"mt-1  mb-1 me-3\" variant=\"danger\">Notifications<Badge bg=\"white\" className=\"text-danger ms-2\">2</Badge></Button>\n            </div>\n            <Collapse in={Buton} className=\"mt-2\">\n                <pre>\n                  <code>\n                    {`\n <div className=\"example2\">\n\n <Button className=\"mt-1  mb-1 me-3\" variant=\"primary\">Notifications<Badge bg=\"white\" className=\"text-primary ms-2\">2</Badge></Button>\n\n <Button className=\"mt-1  mb-1 me-3\" variant=\"secondary\">Notifications<Badge bg=\"white\" className=\"text-secondary ms-2\">2</Badge></Button>\n\n <Button className=\"mt-1  mb-1 me-3\" variant=\"success\">Notifications<Badge bg=\"white\" className=\"text-success ms-2\">2</Badge></Button>\n\n <Button className=\"mt-1  mb-1 me-3\" variant=\"info\">Notifications<Badge bg=\"white\" className=\"text-info ms-2\">2</Badge></Button>\n\n <Button className=\"mt-1  mb-1 me-3\" variant=\"warning\">Notifications<Badge bg=\"white\" className=\"text-warning ms-2\">2</Badge></Button>\n\n <Button className=\"mt-1  mb-1 me-3\" variant=\"danger\">Notifications<Badge bg=\"white\" className=\"text-danger ms-2\">2</Badge></Button>\n</div>\n`}\n                  </code>\n                </pre>\n              </Collapse>\n          </Card.Body>\n        </Card>\n      </Col>\n      {/* <!-- COL-END --> */}\n      <Col xl={12}>\n        <Card>\n          <Card.Header>\n            <Card.Title>Buttons with Rounded Badges</Card.Title>\n              <Form className=\"ms-auto\">\n                <Form.Check type=\"switch\" label=\"Show Code\" id=\"custom-switch\" onClick={() => setRounded(!Rounded)} className=\"showcode d-flex ms-auto mx-2\" />\n              </Form>\n          </Card.Header>\n          <Card.Body>\n            <p>Badges can be used as part of links or buttons to provide a counter.</p>\n            <div className=\"example\">\n\n              <Button variant=\"primary\" className=\"position-relative me-5 mb-3\"> Projects\n                <Badge bg=\"danger\" className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill\">20+</Badge>\n                <span className=\"visually-hidden\">unread messages</span></Button>\n\n\n              <Button variant=\"secondary\" className=\"position-relative me-5 mb-3\"> Projects\n                <Badge bg=\"danger\" className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill\">20+</Badge>\n                <span className=\"visually-hidden\">unread messages</span></Button>\n\n              <Button variant=\"success\" className=\"position-relative me-5 mb-3\"> Projects\n                <Badge bg=\"danger\" className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill\">20+</Badge>\n                <span className=\"visually-hidden\">unread messages</span></Button>\n\n              <Button variant=\"info\" className=\"position-relative me-5 mb-3\"> Projects\n                <Badge bg=\"danger\" className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill\">20+</Badge>\n                <span className=\"visually-hidden\">unread messages</span></Button>\n\n              <Button variant=\"warning\" className=\"position-relative me-5 mb-3\"> Projects\n                <Badge bg=\"danger\" className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill\">20+</Badge>\n                <span className=\"visually-hidden\">unread messages</span></Button>\n\n              <Button variant=\"green\" className=\"position-relative me-5 mb-3\"> Projects\n                <Badge bg=\"danger\" className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill\">20+</Badge>\n                <span className=\"visually-hidden\">unread messages</span></Button>\n            </div>\n            <Collapse in={Rounded} className=\"mt-2\">\n                <pre>\n                  <code>\n                    {`\n<div className=\"example\">\n\n<Button variant=\"primary\" className=\"position-relative me-5 mb-2\"> Projects\n  <Badge bg=\"danger\" className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill\">20+</Badge>\n  <span className=\"visually-hidden\">unread messages</span></Button>\n\n\n<Button variant=\"secondary\" className=\"position-relative me-5 mb-2\"> Projects\n  <Badge bg=\"danger\" className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill\">20+</Badge>\n  <span className=\"visually-hidden\">unread messages</span></Button>\n\n<Button variant=\"success\" className=\"position-relative me-5 mb-2\"> Projects\n  <Badge bg=\"danger\" className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill\">20+</Badge>\n  <span className=\"visually-hidden\">unread messages</span></Button>\n\n<Button variant=\"info\" className=\"position-relative me-5 mb-2\"> Projects\n  <Badge bg=\"danger\" className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill\">20+</Badge>\n  <span className=\"visually-hidden\">unread messages</span></Button>\n\n<Button variant=\"warning\" className=\"position-relative me-5 mb-2\"> Projects\n  <Badge bg=\"danger\" className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill\">20+</Badge>\n  <span className=\"visually-hidden\">unread messages</span></Button>\n\n<Button variant=\"green\" className=\"position-relative me-5 mb-2\"> Projects\n  <Badge bg=\"danger\" className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill\">20+</Badge>\n  <span className=\"visually-hidden\">unread messages</span></Button>\n</div>\n`}\n                  </code>\n                </pre>\n              </Collapse>\n          </Card.Body>\n        </Card>\n      </Col>\n      {/* <!-- COL-END --> */}\n\n    </Row>\n    {/* <!-- ROW-2 CLOSED --> */}\n\n    {/* <!-- ROW-3 OPEN --> */}\n    <Row>\n      <Col md={12} xl={6}>\n        <Card>\n          <Card.Header>\n            <Card.Title>Heading Badges</Card.Title>\n              <Form className=\"ms-auto\">\n                <Form.Check type=\"switch\" label=\"Show Code\" id=\"custom-switch\" onClick={() => setHeading(!Heading)} className=\"showcode d-flex ms-auto mx-2\" />\n              </Form>\n          </Card.Header>\n          <Card.Body>\n            <p>Badges scale to match the size of the immediate parent element by using relative font sizing and <code className=\"highlighter-rouge\">em</code> units. As of v5, badges no longer have focus or hover styles for links.</p>\n            <div className=\"example\">\n\n\n              <h1>Heading 01<Badge bg=\"default\">New</Badge></h1>\n              <h2>Heading 01<Badge bg=\"default\">New</Badge></h2>\n              <h3>Heading 01<Badge bg=\"default\">New</Badge></h3>\n              <h4>Heading 01<Badge bg=\"default\">New</Badge></h4>\n              <h5>Heading 01<Badge bg=\"default\">New</Badge></h5>\n              <h6>Heading 01<Badge bg=\"default\">New</Badge></h6>\n            </div>\n            <Collapse in={Heading} className=\"mt-2\">\n                <pre>\n                  <code>\n                    {`\n <div className=\"example\">\n <h1>Heading 01<Badge bg=\"default\">New</Badge></h1>\n <h2>Heading 01<Badge bg=\"default\">New</Badge></h2>\n <h3>Heading 01<Badge bg=\"default\">New</Badge></h3>\n <h4>Heading 01<Badge bg=\"default\">New</Badge></h4>\n <h5>Heading 01<Badge bg=\"default\">New</Badge></h5>\n <h6>Heading 01<Badge bg=\"default\">New</Badge></h6>\n</div>\n`}\n                  </code>\n                </pre>\n              </Collapse>\n          </Card.Body>\n        </Card>\n      </Col>\n      {/* <!-- COL-END --> */}\n      <Col md={12} xl={6}>\n        <Card>\n          <Card.Header>\n            <Card.Title>Color Heading Badges</Card.Title>\n              <Form className=\"ms-auto\">\n                <Form.Check type=\"switch\" label=\"Show Code\" id=\"custom-switch\" onClick={() => setcolor(!color)} className=\"showcode d-flex ms-auto mx-2\" />\n              </Form>\n          </Card.Header>\n          <Card.Body>\n            <p>Badges scale to match the size of the immediate parent element by using relative font sizing and <code className=\"highlighter-rouge\">em</code> units. As of v5, badges no longer have focus or hover styles for links.</p>\n            <div className=\"example\">\n\n\n              <h1 className=\"text-primary\" >Heading 01<Badge bg=\"primary\">New</Badge></h1>\n              <h2 className=\"text-red\" >Heading 01<Badge bg=\"danger\">New</Badge></h2>\n              <h3 className=\"text-yellow\" >Heading 01<Badge bg=\"warning\">New</Badge></h3>\n              <h4 className=\"text-green\" >Heading 01<Badge bg=\"success\">New</Badge></h4>\n              <h5 className=\"text-info\" >Heading 01<Badge bg=\"info\">New</Badge></h5>\n              <h6 className=\"text-secondary\" >Heading 01<Badge bg=\"secondary\">New</Badge></h6>\n\n            </div>\n            <Collapse in={color} className=\"mt-2\">\n                <pre>\n                  <code>\n                    {`\n    <div className=\"example\">\n    <h1 className=\"text-primary\" >Heading 01<Badge bg=\"primary\">New</Badge></h1>\n    <h2 className=\"text-red\" >Heading 01<Badge bg=\"danger\">New</Badge></h2>\n    <h3 className=\"text-yellow\" >Heading 01<Badge bg=\"warning\">New</Badge></h3>\n    <h4 className=\"text-green\" >Heading 01<Badge bg=\"success\">New</Badge></h4>\n    <h5 className=\"text-info\" >Heading 01<Badge bg=\"info\">New</Badge></h5>\n    <h6 className=\"text-secondary\" >Heading 01<Badge bg=\"secondary\">New</Badge></h6>\n\n  </div>\n\n`}\n                  </code>\n                </pre>\n              </Collapse>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n    {/* <!-- ROW-3 CLOSED --> */}\n  </div>\n)};\n\nexport default BadgesPills;\n\n\n\n"],"names":["props","className","styles","titles","Breadcrumb","items","map","value","index","href","active","useState","Badges","setBadges","Pill","setPill","Gradient","setGradient","Gradientpill","setGradientpill","Buton","setButon","Rounded","setRounded","Heading","setHeading","color","setcolor","PageHeader","Row","Col","md","lg","Card","Form","type","label","id","onClick","Badge","bg","Collapse","in","pill","xl","Button","variant"],"sourceRoot":""}
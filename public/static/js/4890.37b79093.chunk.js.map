{"version":3,"file":"static/js/4890.37b79093.chunk.js","mappings":"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","sources":["Data/App/DataChart.jsx","Layouts/PageHeader/PageHeader.module.scss","Layouts/PageHeader/PageHeader.jsx","components/PackageManage/style.module.scss","components/PackageManage/index.jsx","../node_modules/react-bootstrap/esm/Button.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  LinearScale,\r\n  CategoryScale,\r\n  BarElement,\r\n  PointElement,\r\n  LineElement,\r\n  Legend,\r\n  Tooltip,\r\n} from 'chart.js';\r\nimport { Chart } from 'react-chartjs-2';\r\n\r\n\r\nChartJS.register(\r\n  LinearScale,\r\n  CategoryScale,\r\n  BarElement,\r\n  PointElement,\r\n  LineElement,\r\n  Legend,\r\n  Tooltip\r\n);\r\n\r\nconst labels = ['bronze', 'silver', 'gold', 'premium', 'platinum'];\r\n\r\n\r\nexport const data = {\r\n  labels,\r\n  \r\n  datasets: [\r\n    {\r\n      type: 'line',\r\n      label: 'Dataset 1',\r\n      backgroundColor: '#6c5ffc',\r\n      borderColor: '#6c5ffc',\r\n      borderWidth: 2,\r\n      fill: false,\r\n      tension: 0.4,\r\n      data: [250, 200, 220, 400, 250, 350]\r\n    },\r\n    {\r\n      type: 'line',\r\n      label: 'Dataset 2',\r\n      backgroundColor: '#05c3fb',\r\n      borderColor: '#05c3fb',\r\n      borderWidth: 2,\r\n      tension: 0.2,\r\n      data: [100, 130, 150, 240, 130, 220],\r\n    },\r\n    {\r\n      type: 'bar',\r\n      label: 'Dataset 3',\r\n      backgroundColor: '#6c5ffc',\r\n      data: [100, 130, 150, 240, 130, 220],\r\n\r\n    },\r\n  ],\r\n};\r\n\r\nconst options = {\r\n  maintainAspectRatio: false,\r\n  responsive: true,\r\n  scales: {\r\n    x: {\r\n      stacked: true,\r\n    },\r\n    y: {\r\n      stacked: true,\r\n    },\r\n  },\r\n}\r\n\r\nexport function Chartdetails() {\r\n  return <Chart type='bar' data={data} options={options} className=\"appchart\" />;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport styles from './PageHeader.module.scss';\nimport { Breadcrumb } from 'react-bootstrap';\n\nconst PageHeader = (props) => {\n\n  return (\n\n    <div className={styles.PageHeader}>\n      {/* <!-- PAGE-HEADER --> */}\n      <div className=\"page-header\">\n        <h1 className=\"page-title\">{props.titles}</h1>\n        <div>\n          <Breadcrumb>\n          {props.items.map((value, index) => {\n          return<Breadcrumb.Item href=\"#\" key={index}>{value}</Breadcrumb.Item>\n        })}\n        <Breadcrumb.Item href=\"#\" active>{props.active}</Breadcrumb.Item>\n          </Breadcrumb>\n        </div>\n      </div>\n      {/* <!-- PAGE-HEADER END --> */}\n    </div>\n  )\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React, { useState, Fragment } from \"react\";\r\nimport styles from \"./style.module.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PageHeader from \"../../Layouts/PageHeader/PageHeader\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Card,\r\n  Button,\r\n  Tab,\r\n  Nav,\r\n  Tabs,\r\n  ListGroupItem,\r\n  ListGroup,\r\n} from \"react-bootstrap\";\r\nimport { Chartdetails } from \"../../Data/App/DataChart\";\r\n\r\n// Basic Edit Table\r\n\r\nexport const BasicEditTable = () => {\r\n  const data = [\r\n    {\r\n      id: 1,\r\n      fullName: \"bronze\",\r\n      limit: \"100\",\r\n    },\r\n    {\r\n      id: 2,\r\n      fullName: \"silver\",\r\n      limit: \"200\",\r\n    },\r\n    {\r\n      id: 3,\r\n      fullName: \"gold\",\r\n      limit: \"300\",\r\n    },\r\n    {\r\n      id: 4,\r\n      fullName: \"premium\",\r\n      limit: \"400\",\r\n    },\r\n    {\r\n      id: 5,\r\n      fullName: \"platinum\",\r\n      limit: \"500\",\r\n    },\r\n  ];\r\n  const [contacts, setContacts] = useState(data);\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    fullName: \"\",\r\n    limit: \"\",\r\n  });\r\n\r\n  const [editContactId, setEditContactId] = useState(null);\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedContact = {\r\n      id: editContactId,\r\n      fullName: editFormData.fullName,\r\n      limit: editFormData.limit,\r\n    };\r\n\r\n    const newContacts = [...contacts];\r\n\r\n    const index = contacts.findIndex((contact) => contact.id === editContactId);\r\n\r\n    newContacts[index] = editedContact;\r\n\r\n    setContacts(newContacts);\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleEditClick = (event, contact) => {\r\n    event.preventDefault();\r\n    setEditContactId(contact.id);\r\n\r\n    const formValues = {\r\n      fullName: contact.fullName,\r\n      limit: contact.limit,\r\n    };\r\n\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (contactId) => {\r\n    const newContacts = [...contacts];\r\n\r\n    const index = contacts.findIndex((contact) => contact.id === contactId);\r\n\r\n    newContacts.splice(index, 1);\r\n\r\n    setContacts(newContacts);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <form onSubmit={handleEditFormSubmit}>\r\n        <table\r\n          id=\"delete-datatable\"\r\n          className=\"table table-bordered text-nowrap border-bottom\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Limit</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {contacts.map((contact) => (\r\n              <Fragment key={contact.id}>\r\n                {editContactId === contact.id ? (\r\n                  <EditableRows\r\n                    editFormData={editFormData}\r\n                    handleEditFormChange={handleEditFormChange}\r\n                    handleCancelClick={handleCancelClick}\r\n                  />\r\n                ) : (\r\n                  <ReadOnlyRows\r\n                    contact={contact}\r\n                    handleEditClick={handleEditClick}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n\r\n      {/* <h2>Add a Contact</h2> */}\r\n    </div>\r\n  );\r\n};\r\nconst EditableRows = ({\r\n  editFormData,\r\n  handleEditFormChange,\r\n  handleCancelClick,\r\n}) => {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"text\"\r\n          required\r\n          placeholder=\"Enter a name...\"\r\n          name=\"fullName\"\r\n          value={editFormData.fullName}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"text\"\r\n          required\r\n          placeholder=\"Enter limit...\"\r\n          name=\"limit\"\r\n          value={editFormData.limit}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <Button variant=\"\" className=\"btn btn-primary me-1\" type=\"submit\">\r\n          Save\r\n        </Button>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"btn btn-danger me-1\"\r\n          onClick={handleCancelClick}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\nconst ReadOnlyRows = ({ contact, handleEditClick, handleDeleteClick }) => {\r\n  return (\r\n    <tr>\r\n      <td>{contact.fullName}</td>\r\n      <td>{contact.limit}</td>\r\n      <td>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"btn btn-primary me-1\"\r\n          type=\"button\"\r\n          onClick={(event) => handleEditClick(event, contact)}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"btn btn-danger me-1\"\r\n          type=\"button\"\r\n          onClick={() => handleDeleteClick(contact.id)}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst PackageManage = () => {\r\n  return (\r\n    <div className={styles.PackageManage}>\r\n      <PageHeader\r\n        titles=\"Package Management\"\r\n        active=\"Package Management\"\r\n        items={[\"Home\"]}\r\n      />\r\n\r\n      <Card>\r\n        <Card.Body>\r\n          <div className=\"table-responsive\">\r\n            <BasicEditTable />\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      <Card>\r\n        <Card.Header>\r\n          <Card.Title as=\"h3\">Sales</Card.Title>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Chartdetails />\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PackageManage;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;"],"names":["ChartJS","LinearScale","CategoryScale","BarElement","PointElement","LineElement","Legend","Tooltip","data","labels","datasets","type","label","backgroundColor","borderColor","borderWidth","fill","tension","options","maintainAspectRatio","responsive","scales","x","stacked","y","Chartdetails","className","props","styles","titles","Breadcrumb","items","map","value","index","href","active","BasicEditTable","useState","id","fullName","limit","contacts","setContacts","editFormData","setEditFormData","editContactId","setEditContactId","handleEditFormChange","event","preventDefault","fieldName","target","getAttribute","fieldValue","newFormData","handleEditClick","contact","formValues","handleCancelClick","handleDeleteClick","contactId","newContacts","findIndex","splice","onSubmit","editedContact","Fragment","EditableRows","ReadOnlyRows","required","placeholder","name","onChange","Button","variant","onClick","PageHeader","Card","as","React","ref","bsPrefix","size","prefix","useBootstrapPrefix","useButtonProps","tagName","buttonProps","Component","_jsx","classNames","disabled","displayName","defaultProps"],"sourceRoot":""}
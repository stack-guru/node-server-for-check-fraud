{"version":3,"file":"static/js/2541.b03c374c.chunk.js","mappings":"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","sources":["Layouts/PageHeader/PageHeader.module.scss","Layouts/PageHeader/PageHeader.jsx","components/bootstrap/Toast/Toast.module.scss","components/bootstrap/Toast/Toast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport styles from './PageHeader.module.scss';\nimport { Breadcrumb } from 'react-bootstrap';\n\nconst PageHeader = (props) => {\n\n  return (\n\n    <div className={styles.PageHeader}>\n      {/* <!-- PAGE-HEADER --> */}\n      <div className=\"page-header\">\n        <h1 className=\"page-title\">{props.titles}</h1>\n        <div>\n          <Breadcrumb>\n          {props.items.map((value, index) => {\n          return<Breadcrumb.Item href=\"#\" key={index}>{value}</Breadcrumb.Item>\n        })}\n        <Breadcrumb.Item href=\"#\" active>{props.active}</Breadcrumb.Item>\n          </Breadcrumb>\n        </div>\n      </div>\n      {/* <!-- PAGE-HEADER END --> */}\n    </div>\n  )\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React, { useState } from 'react';\nimport { Card, Row, Col, Form, Collapse, Toast, Button, ToastHeader } from 'react-bootstrap';\nimport styles from './Toast.module.scss';\nimport PageHeader from '../../../Layouts/PageHeader/PageHeader';\n\nconst Toasts = () => {\n\n  // BasicToast\n\n  const [basicShow, setbasicShow] = useState(true);\n  const togglebasicShow = () => setbasicShow(!basicShow);\n\n  // Colour Toasts\n\n  const [colourShow, setcolourShow] = useState(true);\n  const togglecolourShow = () => setcolourShow(!colourShow);\n  const [colourShow2, setcolourShow2] = useState(true);\n  const togglecolourShow2 = () => setcolourShow2(!colourShow2);\n  const [colourShow3, setcolourShow3] = useState(true);\n  const togglecolourShow3 = () => setcolourShow3(!colourShow3);\n  const [colourShow4, setcolourShow4] = useState(true);\n  const togglecolourShow4 = () => setcolourShow4(!colourShow4);\n\n  // Translucent Toasts\n  const [TranslucentShow, setTranslucentShow] = useState(true);\n  const toggleTranslucent = () => setTranslucentShow(!TranslucentShow);\n\n  // Stacking Toasts\n  const [stackingShow, setstackingShowShow] = useState(true);\n  const togglestacking = () => setstackingShowShow(!stackingShow);\n  const [stackingShow1, setstackingShowShow1] = useState(true);\n  const togglestacking1 = () => setstackingShowShow1(!stackingShow1);\n\n  // Custom content Toasts\n\n  const [contentShow, setcontentShow] = useState(true);\n  const togglecontentShow = () => setcontentShow(!contentShow);\n\n  // CustomToasts \n\n  const [CustomShow, setCustomShow] = useState(true);\n  const toggleCustom = () => setCustomShow(!CustomShow);\n\n  // Placement Toasts\n\n  const [placementShow, setplacementShow] = useState(true);\n  const toggleplacementShow = () => setplacementShow(!placementShow);\n\n  const [Basic, setBasic] = useState(false);\n  const [Translucent, setTranslucent] = useState(false);\n  const [Custom, setCustom] = useState(false);\n  const [Color, setColor] = useState(false);\n  const [Stacking, setStacking] = useState(false);\n  const [Placement, setPlacement] = useState(false);\n\n  return (\n\n    <div className={styles.Toast}>\n      <PageHeader titles=\"Toasts\" active=\"Toasts\" items={['Componets']} />\n      {/* <!-- ROW-1 OPEN --> */}\n      <Row>\n        <Col xl={6} md={12}>\n          <Card>\n            <Card.Header>\n\n              <Card.Title>Basic Toasts</Card.Title>\n              <Form className=\"ms-auto\">\n                <Form.Check type=\"switch\" label=\"Show Code\" id=\"custom-switch\" onClick={() => setBasic(!Basic)} className=\"showcode d-flex ms-auto mx-2\" />\n              </Form>\n            </Card.Header>\n            <Card.Body>\n              <div className=\"p-4\">\n                <Row>\n\n                  <Toast show={basicShow} onClose={togglebasicShow}>\n                    <Toast.Header>\n                      <img src={require(\"../../../assets/images/brand/icon-dark.png\")} alt=\"\" className=\"me-2\" height=\"18\" />\n                      <strong className=\"me-auto\">Bootstrap</strong>\n                      <small>11 mins ago</small>\n\n                    </Toast.Header>\n                    <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n                  </Toast>\n                  <Col md={12} className=\"mt-2 mt-md-0\">\n                    <Button variant=\"primary\" className=\"mt-5\" onClick={togglebasicShow}>Show live toast</Button>\n                  </Col>\n\n                </Row>\n              </div>\n              <Collapse in={Basic} className=\"mt-2\">\n                <pre>\n                  <code>\n                    {`\nexport function Basictoast() {\n  const [showA, setShowA] = useState(true);\n\n  const toggleShow = () => setShowA(!showA);\n  \n  return (\n      <div>\n          <Toast show={showA} onClose={toggleShow}>\n              <Toast.Header>\n              <img src={require(\"../../assets/images/brand/icon-dark\")} alt=\"\" className=\"me-2\" height=\"18\"/>\n                  <strong className=\"me-auto\">Bootstrap</strong>\n                  <small>11 mins ago</small>\n                  \n              </Toast.Header>\n              <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n          </Toast>\n          <Col md={12} className=\"mt-2 mt-md-0\">\n                <Button  variant=\"primary\" className=\"mt-5\" onClick={toggleShow}>Show live toast</Button>\n              </Col>\n      </div>\n  );\n}\n`}\n                  </code>\n                </pre>\n              </Collapse>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xl={6} md={12}>\n          <Card>\n            <Card.Header>\n\n              <Card.Title>Translucent Toasts</Card.Title>\n              <Form className=\"ms-auto\">\n                <Form.Check type=\"switch\" label=\"Show Code\" id=\"custom-switch\" onClick={() => setTranslucent(!Translucent)} className=\"showcode d-flex ms-auto mx-2\" />\n              </Form>\n            </Card.Header>\n            <Card.Body>\n              <div className=\"p-4 bg-light border\">\n\n                <Toast show={TranslucentShow} onClose={toggleTranslucent}>\n                  <Toast.Header>\n                    <img src={require(\"../../../assets/images/brand/icon-dark.png\")} alt=\"\" className=\"me-2\" height=\"18\" />\n                    <strong className=\"me-auto\">Bootstrap</strong>\n                    <small>11 mins ago</small>\n                  </Toast.Header>\n                  <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n                </Toast>\n              </div>\n              <Collapse in={Translucent} className=\"mt-2\">\n                <pre>\n                  <code>\n                    {`\n  export function Translucenttoast() {\n    const [showA, setShowA] = useState(true);\n\n    const toggleShowA = () => setShowA(!showA);\n\n    return (\n        <div>\n            <Toast show={showA} onClose={toggleShowA}>\n                <Toast.Header>\n                <img src={require(\"../../assets/images/brand/icon-dark\")} alt=\"\" className=\"me-2\" height=\"18\"/>\n  <strong className=\"me-auto\">Bootstrap</strong>\n  <small>11 mins ago</small>\n                </Toast.Header>\n                <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n            </Toast>\n        </div>\n    );\n}\n`}\n                  </code>\n                </pre>\n              </Collapse>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      {/* <!-- ROW-1 CLOSED --> */}\n\n      {/* <!-- ROW-2 OPEN  --> */}\n      <Row>\n        <Col xl={6} md={12}>\n          <Card>\n            <Card.Header>\n\n              <Card.Title>Custom content Toasts</Card.Title>\n              <Form className=\"ms-auto\">\n                <Form.Check type=\"switch\" label=\"Show Code\" id=\"custom-switch\" onClick={() => setCustom(!Custom)} className=\"showcode d-flex ms-auto mx-2\" />\n              </Form>\n            </Card.Header>\n            <Card.Body>\n              <Row>\n                <Col md={12} xl={6} className=\"mt-1\">\n                  <Toast show={contentShow} onClose={togglecontentShow}>\n                    <Toast.Header className=\"border-bottom-0\">\n                      <strong className=\"me-auto\">Hello, world! This is a toast message.</strong>\n                    </Toast.Header>\n                  </Toast>\n                </Col>\n                <Col md={12} xl={6} className=\"mt-1\">\n                  <Toast show={CustomShow} onClose={toggleCustom}>\n                    <ToastHeader className='justify-content-between'>\n                      Hello, world! This is a toast message.\n                    </ToastHeader>\n                    <Toast.Body className=\"mt-2 pt-2\">\n                      <Button size=\"sm\" variant=\"primary me-1\">Take Action</Button>\n                      <Button size=\"sm\" variant=\"secondary\" onClick={() => setcontentShow(false)}>\n                        Close\n                      </Button>\n                    </Toast.Body>\n                  </Toast>\n                </Col>\n              </Row>\n              <Collapse in={Custom} className=\"mt-2\">\n                <pre>\n                  <code>\n                    {`\n\nexport function CustomContenttoast() {\n  const [showA, setShowA] = useState(true);\n\n  const toggleShowA = () => setShowA(!showA);\n\n  return (\n      <div>\n          <Toast show={showA} onClose={toggleShowA}>\n              <Toast.Header>\n                  <strong className=\"me-auto\">Hello, world! This is a toast message.</strong>\n              </Toast.Header>\n\n          </Toast>\n      </div>\n  );\n}\n\nexport function Customtoast() {\n  const [showA, setShowA] = useState(true);\n  const toggleShowA = () => setShowA(!showA);\n  return (\n      <div>\n          <Toast show={showA} onClose={toggleShowA}>\n              <ToastHeader className='justify-content-between'>\n                  Hello, world! This is a toast message.\n              </ToastHeader>\n              <Toast.Body className=\"mt-2 pt-2\">\n                  <Button size=\"sm\" variant=\"primary me-1\">Take Action</Button>\n                  <Button size=\"sm\" variant=\"secondary\" onClick={() => setShowA(false)}>\n                      Close\n                  </Button>\n              </Toast.Body>\n          </Toast>\n      </div>\n  );\n}\n`}\n                  </code>\n                </pre>\n              </Collapse>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xl={6} md={12}>\n          <Card>\n            <Card.Header>\n\n              <Card.Title>Color Toasts</Card.Title>\n              <Form className=\"ms-auto\">\n                <Form.Check type=\"switch\" label=\"Show Code\" id=\"custom-switch\" onClick={() => setColor(!Color)} className=\"showcode d-flex ms-auto mx-2\" />\n              </Form>\n            </Card.Header>\n            <Card.Body>\n              <Row>\n                <Col md={6}>\n                  <div className=\"toast align-items-center text-white bg-primary border-0 show\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" data-bs-autohide=\"false\">\n                    <div>\n\n                      <Toast show={colourShow} onClose={togglecolourShow}>\n                        <Toast.Header className=\"bg-primary text-white\">\n                          <strong className=\"me-auto\">Hello, world! This is a toast message.</strong>\n                        </Toast.Header>\n                      </Toast>\n                    </div>\n                  </div>\n                </Col>\n                <Col md={6} className=\"mt-2 mt-md-0\">\n                  <div className=\"toast align-items-center text-white bg-secondary border-0 show\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" data-bs-autohide=\"false\">\n                    <div>\n                      <Toast show={colourShow2} onClose={togglecolourShow2}>\n                        <Toast.Header className=\"bg-secondary text-white\">\n                          <strong className=\"me-auto\">Hello, world! This is a toast message.</strong>\n                        </Toast.Header>\n                      </Toast>\n\n                    </div>\n                  </div>\n                </Col>\n                <Col md={6} className=\"mt-2\">\n                  <div className=\"toast align-items-center text-white bg-success border-0 show\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" data-bs-autohide=\"false\">\n                    <div>\n\n                      <Toast show={colourShow3} onClose={togglecolourShow3}>\n                        <Toast.Header className=\"bg-success text-white\">\n                          <strong className=\"me-auto\">Hello, world! This is a toast message.</strong>\n                        </Toast.Header>\n                      </Toast>\n                    </div>\n                  </div>\n                </Col>\n                <Col md={6} className=\"mt-2\">\n                  <div className=\"toast align-items-center text-white bg-danger border-0 show\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" data-bs-autohide=\"false\">\n                    <div>\n\n                      <Toast show={colourShow3} onClose={togglecolourShow4}>\n                        <Toast.Header className=\"bg-danger text-white\">\n                          <strong className=\"me-auto\">Hello, world! This is a toast message.</strong>\n                        </Toast.Header>\n                      </Toast>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n              <Collapse in={Color} className=\"mt-2\">\n                <pre>\n                  <code>\n                    {`\nexport function ColourAtoast() {\n  const [showA, setShowA] = useState(true);\n\n  const toggleShowA = () => setShowA(!showA);\n\n  return (\n      <div>\n          <Toast show={showA} onClose={toggleShowA}>\n              <Toast.Header className=\"bg-primary text-white\">\n                  <strong className=\"me-auto\">Hello, world! This is a toast message.</strong>\n              </Toast.Header>\n          </Toast>\n      </div>\n  );\n}\n\nexport function ColourBtoast() {\n  const [showA, setShowA] = useState(true);\n\n  const toggleShowA = () => setShowA(!showA);\n\n  return (\n      <div>\n          <Toast show={showA} onClose={toggleShowA}>\n              <Toast.Header className=\"bg-secondary text-white\">\n                  <strong className=\"me-auto\">Hello, world! This is a toast message.</strong>\n              </Toast.Header>\n          </Toast>\n      </div>\n  );\n}\nexport function ColourCtoast() {\n  const [showA, setShowA] = useState(true);\n\n  const toggleShowA = () => setShowA(!showA);\n\n  return (\n      <div>\n          <Toast show={showA} onClose={toggleShowA}>\n              <Toast.Header className=\"bg-success text-white\">\n                  <strong className=\"me-auto\">Hello, world! This is a toast message.</strong>\n              </Toast.Header>\n          </Toast>\n      </div>\n  );\n}\nexport function ColourDtoast() {\n  const [showA, setShowA] = useState(true);\n\n  const toggleShowA = () => setShowA(!showA);\n\n  return (\n      <div>\n          <Toast show={showA} onClose={toggleShowA}>\n              <Toast.Header className=\"bg-danger text-white\">\n                  <strong className=\"me-auto\">Hello, world! This is a toast message.</strong>\n              </Toast.Header>\n          </Toast>\n      </div>\n  );\n}\n`}\n                  </code>\n                </pre>\n              </Collapse>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      {/* <!-- ROW-2 CLOSED --> */}\n\n      {/* <!-- ROW-3 OPEN --> */}\n      <Row>\n        <Col xl={6} md={12}>\n          <Card>\n            <Card.Header>\n\n              <Card.Title>Stacking Toasts</Card.Title>\n              <Form className=\"ms-auto\">\n                <Form.Check type=\"switch\" label=\"Show Code\" id=\"custom-switch\" onClick={() => setStacking(!Stacking)} className=\"showcode d-flex ms-auto mx-2\" />\n              </Form>\n            </Card.Header>\n            <Card.Body>\n              <div className=\"p-4 bg-light border\">\n                  <Toast className='mb-5' show={stackingShow} onClose={togglestacking} >\n                    <Toast.Header>\n                      <img src={require(\"../../../assets/images/brand/icon-dark.png\")} alt=\"\" className=\"me-2\" height=\"18\" />\n                      <strong className=\"me-auto\">Bootstrap</strong>\n                      <small className=\"text-muted\">just now</small>\n                    </Toast.Header>\n                    <Toast.Body>See? Just like this.</Toast.Body>\n                  </Toast>\n\n                  <Toast className='mb-3' show={stackingShow1} onClose={togglestacking1}>\n                    <Toast.Header>\n                      <img src={require(\"../../../assets/images/brand/icon-dark.png\")} alt=\"\" className=\"me-2\" height=\"18\" />\n                      <strong className=\"me-auto\">Bootstrap</strong>\n                      <small className=\"text-muted\">2 seconds ago</small>\n                    </Toast.Header>\n                    <Toast.Body>Heads up, toasts will stack automatically</Toast.Body>\n                  </Toast>\n              </div>\n            </Card.Body>\n            <Collapse in={Stacking} className=\"mt-2\">\n                <pre>\n                  <code>\n                    {`\nexport function StackingAtoast() {\n  const [showA, setShowA] = useState(true);\n\n  const toggleShowA = () => setShowA(!showA);\n\n  return (\n      <div>\n          <Toast show={showA} onClose={toggleShowA} >\n              <Toast.Header>\n              <img src={require(\"../../assets/images/brand/icon-dark\")} alt=\"\" className=\"me-2\" height=\"18\"/>\n                  <strong className=\"me-auto\">Bootstrap</strong>\n                  <small className=\"text-muted\">just now</small>\n              </Toast.Header>\n              <Toast.Body>See? Just like this.</Toast.Body>\n          </Toast>\n      </div>\n  );\n}\nexport function StackingBtoast() {\n  const [showA, setShowA] = useState(true);\n\n  const toggleShowA = () => setShowA(!showA);\n\n  return (\n      <div>\n          <Toast show={showA} onClose={toggleShowA}>\n              <Toast.Header>\n              <img src={require(\"../../assets/images/brand/icon-dark\")} alt=\"\" className=\"me-2\" height=\"18\"/>\n                  <strong className=\"me-auto\">Bootstrap</strong>\n                  <small className=\"text-muted\">2 seconds ago</small>\n              </Toast.Header>\n              <Toast.Body>Heads up, toasts will stack automatically</Toast.Body>\n          </Toast>\n      </div>\n  );\n}\n`}\n                  </code>\n                </pre>\n              </Collapse>\n          </Card>\n        </Col>\n        <Col xl={6} md={12}>\n          <Card>\n            <Card.Header>\n\n              <Card.Title className='w-100 w-sm-auto'>Placement Toast</Card.Title>\n              <Form className=\"ms-auto\">\n                <Form.Check type=\"switch\" label=\"Show Code\" id=\"custom-switch\" onClick={() => setPlacement(!Placement)} className=\"showcode d-flex ms-auto mx-2\" />\n              </Form>\n            </Card.Header>\n            <Card.Body>\n              <div className=\"p-4 bg-light border\">\n                <div aria-live=\"polite\" aria-atomic=\"true\" className=\"d-flex justify-content-center align-items-center w-100 h-180\">\n\n                  <Toast className='w-100' show={placementShow} onClose={toggleplacementShow}>\n                    <Toast.Header>\n                      <img src={require(\"../../../assets/images/brand/icon-dark.png\")} alt=\"\" className=\"me-2\" height=\"18\" />\n                      <strong className=\"me-auto\">Bootstrap</strong>\n                      <small className=\"text-muted\">11 mins ago</small>\n                    </Toast.Header>\n                    <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n                  </Toast>\n                </div>\n              </div>\n              <Collapse in={Placement} className=\"mt-2\">\n                <pre>\n                  <code>\n                    {`\nexport function Placementtoast() {\n  const [showA, setShowA] = useState(true);\n\n  const toggleShowA = () => setShowA(!showA);\n\n  return (\n      <div>\n          <Toast show={showA} onClose={toggleShowA}>\n              <Toast.Header>\n              <img src={require(\"../../assets/images/brand/icon-dark\")} alt=\"\" className=\"me-2\" height=\"18\"/>\n                  <strong className=\"me-auto\">Bootstrap</strong>\n                  <small className=\"text-muted\">11 mins ago</small>\n              </Toast.Header>\n              <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n          </Toast>\n      </div>\n  );\n}\n`}\n                  </code>\n                </pre>\n              </Collapse>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      {/* <!-- ROW-3 CLOSED --> */}\n    </div>\n  )\n};\n\nexport default Toasts;\n"],"names":["props","className","styles","titles","Breadcrumb","items","map","value","index","href","active","useState","basicShow","setbasicShow","togglebasicShow","colourShow","setcolourShow","colourShow2","setcolourShow2","colourShow3","setcolourShow3","colourShow4","setcolourShow4","TranslucentShow","setTranslucentShow","stackingShow","setstackingShowShow","stackingShow1","setstackingShowShow1","contentShow","setcontentShow","CustomShow","setCustomShow","placementShow","setplacementShow","Basic","setBasic","Translucent","setTranslucent","Custom","setCustom","Color","setColor","Stacking","setStacking","Placement","setPlacement","PageHeader","Row","Col","xl","md","Card","Form","type","label","id","onClick","Toast","show","onClose","src","require","alt","height","Button","variant","Collapse","in","ToastHeader","size","role"],"sourceRoot":""}
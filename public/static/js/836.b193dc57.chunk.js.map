{"version":3,"file":"static/js/836.b193dc57.chunk.js","mappings":"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","sources":["Layouts/PageHeader/PageHeader.module.scss","Layouts/PageHeader/PageHeader.jsx","components/AllowedCountry/style.module.scss","components/AllowedCountry/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport styles from './PageHeader.module.scss';\nimport { Breadcrumb } from 'react-bootstrap';\n\nconst PageHeader = (props) => {\n\n  return (\n\n    <div className={styles.PageHeader}>\n      {/* <!-- PAGE-HEADER --> */}\n      <div className=\"page-header\">\n        <h1 className=\"page-title\">{props.titles}</h1>\n        <div>\n          <Breadcrumb>\n          {props.items.map((value, index) => {\n          return<Breadcrumb.Item href=\"#\" key={index}>{value}</Breadcrumb.Item>\n        })}\n        <Breadcrumb.Item href=\"#\" active>{props.active}</Breadcrumb.Item>\n          </Breadcrumb>\n        </div>\n      </div>\n      {/* <!-- PAGE-HEADER END --> */}\n    </div>\n  )\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React, { Fragment, useState } from \"react\";\r\nimport styles from \"./style.module.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PageHeader from \"../../Layouts/PageHeader/PageHeader\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Card,\r\n  Button,\r\n  Tab,\r\n  Nav,\r\n  Tabs,\r\n  ListGroupItem,\r\n  ListGroup,\r\n  Form,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\n// Add New Row with Edit Table\r\nconst Savetable = () => {\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const data = [\r\n    {\r\n      id: 1,\r\n      date: \"2023/2/21\",\r\n      name: \"Best Country\",\r\n      code: \"US, RU\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"2023/2/22\",\r\n      name: \"Good Country\",\r\n      code: \"UK\",\r\n    },\r\n  ];\r\n  const [contacts, setContacts] = useState(data);\r\n  const [addFormData, setAddFormData] = useState({\r\n    date: \"\",\r\n    name: \"\",\r\n    code: \"\",\r\n  });\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    date: \"\",\r\n    name: \"\",\r\n    url: \"\",\r\n  });\r\n\r\n  const [editContactId, setEditContactId] = useState(null);\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setAddFormData(newFormData);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newContact = {\r\n      id: nanoid(),\r\n      fullName: addFormData.fullName,\r\n      position: addFormData.position,\r\n      start: addFormData.start,\r\n      salary: addFormData.salary,\r\n      email: addFormData.email,\r\n    };\r\n\r\n    const newContacts = [...contacts, newContact];\r\n    setContacts(newContacts);\r\n  };\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedContact = {\r\n      id: editContactId,\r\n      fullName: editFormData.fullName,\r\n      position: editFormData.position,\r\n      start: addFormData.start,\r\n      salary: editFormData.salary,\r\n      email: editFormData.email,\r\n    };\r\n\r\n    const newContacts = [...contacts];\r\n\r\n    const index = contacts.findIndex((contact) => contact.id === editContactId);\r\n\r\n    newContacts[index] = editedContact;\r\n\r\n    setContacts(newContacts);\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleEditClick = (event, contact) => {\r\n    event.preventDefault();\r\n    setEditContactId(contact.id);\r\n\r\n    const formValues = {\r\n      fullName: contact.fullName,\r\n      position: contact.position,\r\n      start: contact.start,\r\n      salary: contact.salary,\r\n      email: contact.email,\r\n    };\r\n\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (contactId) => {\r\n    const newContacts = [...contacts];\r\n\r\n    const index = contacts.findIndex((contact) => contact.id === contactId);\r\n\r\n    newContacts.splice(index, 1);\r\n\r\n    setContacts(newContacts);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container table-responsive\">\r\n      <form onSubmit={handleEditFormSubmit}>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"btn btn-secondary mb-3\"\r\n          onClick={() => setModalShow(true)}\r\n        >\r\n          Add Allowed Country\r\n        </Button>\r\n        <table\r\n          id=\"delete-datatable\"\r\n          className=\"table table-bordered text-nowrap border-bottom\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>DATE</th>\r\n              <th>NAME</th>\r\n              <th>COUNTRY CODE</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {contacts.map((contact) => (\r\n              <Fragment key={contact.id}>\r\n                {editContactId === contact.id ? (\r\n                  <EditableRow\r\n                    editFormData={editFormData}\r\n                    handleEditFormChange={handleEditFormChange}\r\n                    handleCancelClick={handleCancelClick}\r\n                  />\r\n                ) : (\r\n                  <ReadOnlyRow\r\n                    contact={contact}\r\n                    handleEditClick={handleEditClick}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Add Allowed Country\r\n          </Modal.Title>\r\n          <Button\r\n            variant=\"\"\r\n            className=\"btn btn-close\"\r\n            onClick={() => setModalShow(false)}\r\n          ></Button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={handleAddFormSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              required\r\n              placeholder=\"Enter a name...\"\r\n              onChange={handleAddFormChange}\r\n              className=\"form-control mb-2\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"code\"\r\n              required\r\n              placeholder=\"Enter an country code...\"\r\n              onChange={handleAddFormChange}\r\n              className=\"form-control mb-2\"\r\n            />\r\n            <Button variant=\"\" className=\"btn btn-primary me-2\" type=\"submit\">\r\n              Add\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => setModalShow(false)}\r\n          >\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nconst EditableRow = ({\r\n  editFormData,\r\n  handleEditFormChange,\r\n  handleCancelClick,\r\n}) => {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"date\"\r\n          required\r\n          placeholder=\"Enter start date...\"\r\n          name=\"date\"\r\n          value={editFormData.date}\r\n          onChange={handleEditFormChange}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"text\"\r\n          required\r\n          placeholder=\"Enter an name...\"\r\n          name=\"name\"\r\n          value={editFormData.name}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"number\"\r\n          required\r\n          placeholder=\"Enter url...\"\r\n          name=\"url\"\r\n          value={editFormData.url}\r\n          onChange={handleEditFormChange}\r\n        />\r\n      </td>\r\n      <td>\r\n        <Button variant=\"\" className=\"btn btn-primary me-1\" type=\"submit\">\r\n          Save\r\n        </Button>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"btn btn-danger me-1\"\r\n          onClick={handleCancelClick}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\nconst ReadOnlyRow = ({ contact, handleEditClick, handleDeleteClick }) => {\r\n  return (\r\n    <tr>\r\n      <td>{contact.date}</td>\r\n      <td>{contact.name}</td>\r\n      <td>{contact.code}</td>\r\n      <td>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"btn btn-primary me-1\"\r\n          type=\"button\"\r\n          onClick={(event) => handleEditClick(event, contact)}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"btn btn-danger me-1\"\r\n          type=\"button\"\r\n          onClick={() => handleDeleteClick(contact.id)}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst AllowedCountry = () => {\r\n  return (\r\n    <div className={styles.AllowedCountry}>\r\n      <PageHeader\r\n        titles=\"Allowed Country\"\r\n        active=\"Allowed Country\"\r\n        items={[\"Home\"]}\r\n      />\r\n      \r\n      <Card>\r\n        <Card.Body>\r\n          <Savetable />\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllowedCountry;\r\n"],"names":["props","className","styles","titles","Breadcrumb","items","map","value","index","href","active","Savetable","React","modalShow","setModalShow","useState","id","date","name","code","contacts","setContacts","addFormData","setAddFormData","url","editFormData","setEditFormData","editContactId","setEditContactId","handleAddFormChange","event","preventDefault","fieldName","target","getAttribute","fieldValue","newFormData","handleEditFormChange","handleEditClick","contact","formValues","fullName","position","start","salary","email","handleCancelClick","handleDeleteClick","contactId","newContacts","findIndex","splice","onSubmit","editedContact","Button","variant","onClick","Fragment","EditableRow","ReadOnlyRow","Modal","show","onHide","size","centered","Form","newContact","nanoid","type","required","placeholder","onChange","PageHeader","Card"],"sourceRoot":""}
{"version":3,"file":"static/js/6654.4dc25719.chunk.js","mappings":"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","sources":["../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormControl.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});"],"names":["ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","map","children","index","React","child","forEach","hasChildOfType","type","some","propTypes","tooltip","as","Feedback","ref","Component","className","_jsx","classNames","displayName","FormCheckLabel","bsPrefix","htmlFor","controlId","useContext","FormContext","useBootstrapPrefix","FormCheck","id","bsSwitchPrefix","inline","reverse","disabled","isValid","isInvalid","feedbackTooltip","feedback","feedbackType","style","title","label","innerFormContext","useMemo","hasLabel","input","FormCheckInput","value","_jsxs","_Fragment","Object","assign","Input","Label","createWithBsPrefix","FormGroup","context","FormLabel","column","visuallyHidden","columnClass","classes","Col","defaultProps","FormRange","FormSelect","size","htmlSize","FormText","muted","Switch","FloatingLabel","_ref","validated","Form","Group","Control","FormControl","Floating","FormFloating","Check","Text","Range","Select","plaintext","readOnly"],"sourceRoot":""}
{"version":3,"file":"static/js/7183.84ade7db.chunk.js","mappings":"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","sources":["Layouts/PageHeader/PageHeader.module.scss","Layouts/PageHeader/PageHeader.jsx","components/pages/forms/FormValidation/FormValidation.module.scss","components/pages/forms/FormValidation/FormValidation.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport styles from './PageHeader.module.scss';\nimport { Breadcrumb } from 'react-bootstrap';\n\nconst PageHeader = (props) => {\n\n  return (\n\n    <div className={styles.PageHeader}>\n      {/* <!-- PAGE-HEADER --> */}\n      <div className=\"page-header\">\n        <h1 className=\"page-title\">{props.titles}</h1>\n        <div>\n          <Breadcrumb>\n          {props.items.map((value, index) => {\n          return<Breadcrumb.Item href=\"#\" key={index}>{value}</Breadcrumb.Item>\n        })}\n        <Breadcrumb.Item href=\"#\" active>{props.active}</Breadcrumb.Item>\n          </Breadcrumb>\n        </div>\n      </div>\n      {/* <!-- PAGE-HEADER END --> */}\n    </div>\n  )\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React, { useState } from 'react'\nimport styles from './FormValidation.module.scss';\nimport PageHeader from '../../../../Layouts/PageHeader/PageHeader';\nimport { Row, Col, Card, Form, Button, InputGroup } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport *as Yup from 'yup';\nimport Select from 'react-select';\n\n\nconst FormValidation = () => {\n\n  // Basic Form validation\n\n  const [validated, setValidated] = useState(false);\n  const state = [\n    { value: \".....\", label: \".....\" },\n  ];\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n\n  const State = [\n    { value: \".....\", label: \".....\" },\n  ];\n\n  const Option = [\n    { value: \"One\", label: \"One\" },\n    { value: \"Two\", label: \"Two\" },\n    { value: \"Three\", label: \"Three\" },\n    { value: \"Four\", label: \"Four\" },\n\n  ];\n\n\n  // Form Validation with Tooltips\n\n  const schema = Yup.object().shape({\n    firstName: Yup.string().required(),\n    lastName: Yup.string().required(),\n    username: Yup.string().required(),\n    city: Yup.string().required(),\n    state1: Yup.string().required(),\n    zip: Yup.string().required(),\n    file: Yup.mixed().required(),\n    terms: Yup.bool().required().oneOf([true], 'terms must be accepted'),\n  });\n\n  const state1 = [\n    { value: \"....\", label: \"....\" },\n  ];\n\n\n  return (\n\n    <div className={styles.FormValidation}>\n      <PageHeader titles=\"Form-Validations\" active=\"Form-Validations\" items={['Forms']} />\n      {/* <!-- ROW OPEN --> */}\n      <Row>\n        <Col lg={12} md={12}>\n          <Card>\n            <Card.Header>\n              <Card.Title as='h3'>Cutom Validation</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                <div className=\"form-row\">\n                  <Col xl={6} className=\"mb-3\">\n                    <Form.Label>First name</Form.Label>\n                    <Form.Control required type=\"text\" placeholder=\"First name\" defaultValue=\"Mark\" />\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Col>\n                  <Col xl={6} className=\"mb-3\">\n                    <Form.Label>Last name</Form.Label>\n                    <Form.Control required type=\"text\" placeholder=\"Last name\" defaultValue=\"Otto\" />\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Col>\n                </div>\n                <div className=\"form-row\">\n                  <Col xl={6} className=\"mb-3\">\n                    <Form.Label>City</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"City\" required />\n                    <Form.Control.Feedback type=\"invalid\"> Please provide a valid city. </Form.Control.Feedback>\n                  </Col>\n                  <Col xl={3} className=\"mb-3\">\n                    <Form.Label>State</Form.Label>\n                    <Select classNamePrefix=\"Select\" options={state} placeholder='State' />\n                    <Form.Control.Feedback type=\"invalid\"> Please provide a valid state.</Form.Control.Feedback>\n                  </Col>\n                  <Col xl={3} className=\"mb-3\">\n                    <Form.Label>Zip</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Zip\" required />\n                    <Form.Control.Feedback type=\"invalid\">Please provide a valid zip.</Form.Control.Feedback>\n                  </Col>\n                </div>\n                <Form.Group className='mb-3'>\n                  <Form.Check required label=\"Agree to terms and conditions\" feedback=\"You must agree before submitting.\" feedbackType=\"invalid\" />\n                </Form.Group>\n                <Button type=\"submit\">Submit form</Button>\n              </Form>\n\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={12} md={12}>\n          <Card>\n            <Card.Header>\n              <Card.Title as='h3'>Default Validation</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Form>\n                <div className=\"form-row\">\n                  <Col xl={6} className=\"mb-3\">\n                    <Form.Label>First name</Form.Label>\n                    <Form.Control required type=\"text\" placeholder=\"First name\" defaultValue=\"Mark\" />\n                  </Col>\n                  <Col xl={6} className=\"mb-3\">\n                    <Form.Label>Last name</Form.Label>\n                    <Form.Control required type=\"text\" placeholder=\"Last name\" defaultValue=\"Otto\" />\n                  </Col>\n                </div>\n                <div className=\"form-row\">\n                  <Col xl={6} className=\"mb-3\">\n                    <Form.Label>City</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"City\" required />\n                  </Col>\n                  <Col xl={3} className=\"mb-3\">\n                    <Form.Label>State</Form.Label>\n                    <Select classNamePrefix=\"Select\" options={State} placeholder='State' />\n                  </Col>\n                  <Col xl={3} className=\"mb-3\">\n                    <Form.Label>Zip</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Zip\" required />\n                  </Col>\n                </div>\n                <Form.Group>\n                  <Form.Check required label=\"Agree to terms and conditions\" feedbackType=\"invalid\" />\n                </Form.Group>\n                <Button className='mt-3' type=\"submit\">Submit form</Button>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={12} md={12}>\n          <Card>\n            <Card.Header>\n              <Card.Title as='h3'>Server Side Validation</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Form>\n                <div className=\"form-row\">\n                  <Col xl={6} className=\"mb-3\">\n                    <Form.Label>First name</Form.Label>\n                    <Form.Control required isValid type=\"text\" placeholder=\"First name\" defaultValue=\"Mark\" />\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Col>\n                  <Col xl={6} className=\"mb-3\">\n                    <Form.Label>Last name</Form.Label>\n                    <Form.Control required isValid type=\"text\" placeholder=\"Last name\" defaultValue=\"Otto\" />\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Col>\n                </div>\n                <div className=\"form-row\">\n                  <Col xl={6} className=\"mb-3\">\n                    <Form.Label>City</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"City\" required isInvalid />\n                    <Form.Control.Feedback type=\"invalid\"> Please provide a valid city. </Form.Control.Feedback>\n                  </Col>\n                  <Col xl={3} className=\"mb-3\">\n                    <Form.Label>State</Form.Label>\n                    <Select classNamePrefix=\"Select\" options={State} placeholder='State' />\n                    <Form.Control.Feedback type=\"invalid\"> Please provide a valid state.</Form.Control.Feedback>\n                  </Col>\n                  <Col xl={3} className=\"mb-3\">\n                    <Form.Label>Zip</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Zip\" required isInvalid />\n                    <Form.Control.Feedback type=\"invalid\">Please provide a valid zip.</Form.Control.Feedback>\n                  </Col>\n                </div>\n                <Form.Group>\n                  <Form.Check required isInvalid label=\"Agree to terms and conditions\" feedback=\"You must agree before submitting.\" feedbackType=\"invalid\" />\n                </Form.Group>\n                <Button type=\"submit\">Submit form</Button>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={12} md={12}>\n          <Card>\n            <Card.Header>\n              <Card.Title as='h3'>Supported Elements</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Form className=\"was-validated\">\n                <div className=\"mb-3\">\n                  <Form.Label>Textarea</Form.Label>\n                  <Form.Control as='textarea' className=\"is-invalid\" id=\"validationTextarea\"\n                    placeholder=\"Required example textarea\" required></Form.Control>\n                  <Form.Control.Feedback type=\"invalid\">Please enter a message in the Textarea</Form.Control.Feedback>\n                </div>\n\n                <div className=\"custom-control custom-checkbox mb-3\">\n                  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customControlValidation1\" required />\n\n                  <Form.Label className=\"custom-control-label\" forhtml=\"customControlValidation1\" >Check this custom checkbox</Form.Label>\n\n                  <div className=\"invalid-feedback\">Example invalid feedback text</div>\n                </div>\n\n                <div className=\"custom-control custom-radio\">\n                  <input type=\"radio\" className=\"custom-control-input\" id=\"customControlValidation2\" name=\"radio-stacked\" required />\n\n                  <Form.Label className=\"custom-control-label\" forhtml=\"customControlValidation2\" >Toggle this custom radio</Form.Label>\n\n                </div>\n\n                <div className=\"custom-control custom-radio mb-3\">\n                  <input type=\"radio\" className=\"custom-control-input\"\n                    id=\"customControlValidation3\" name=\"radio-stacked\" required />\n                  <label className=\"custom-control-label\"\n                  // for=\"customControlValidation3\"\n                  >Or toggle\n                    this other custom radio</label>\n                  <div className=\"invalid-feedback\">More example invalid feedback text</div>\n                </div>\n\n                <div className=\"mb-3\">\n                  <InputGroup hasValidation>\n                    <InputGroup.Text id=\"validatedInputGroupPrepend\">@</InputGroup.Text>\n                    <Form.Control type=\"text\" required isInvalid />\n                    <Form.Control.Feedback type=\"invalid\"> Example invalid input group feedback</Form.Control.Feedback>\n                  </InputGroup>\n                </div>\n\n\n\n                <div className=\"mb-3\">\n                  <InputGroup hasValidation className='flex-nowrap'>\n                    <InputGroup.Text className='py-2' id=\"validatedInputGroupPrepend\">Option</InputGroup.Text>\n                    <Select classNamePrefix=\"Select\" className='w-94' options={Option} placeholder='Select' />\n                    <Form.Control.Feedback type=\"invalid\"> Example invalid input group feedback</Form.Control.Feedback>\n                  </InputGroup>\n                </div>\n\n                <InputGroup className='wasvalidated'>\n                  <Form.Control type=\"file\" required />\n                  <Form.Control.Feedback type=\"invalid\">Example invalid input group feedback</Form.Control.Feedback>\n                </InputGroup>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={12} md={12}>\n          <Card>\n            <Card.Header>\n              <Card.Title as='h3'>Tooltips</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Formik validationSchema={schema} onSubmit={console.log} initialValues={{ firstName: 'Mark', lastName: 'Otto', username: '', city: '', state1: '', zip: '', file: null, terms: false }}>\n                {({ handleSubmit, handleChange, values, touched, errors }) => (\n\n                  <Form noValidate onSubmit={handleSubmit}>\n                    <Row className=\"mb-3\">\n                      <Form.Group as={Col} md=\"6\" controlId=\"validationFormik101\" className=\"position-relative\">\n                        <Form.Label>First name</Form.Label>\n                        <Form.Control type=\"text\" name=\"firstName\" value={values.firstName} onChange={handleChange} isValid={touched.firstName && !errors.firstName} />\n                        <Form.Control.Feedback tooltip>Looks good!</Form.Control.Feedback>\n                      </Form.Group>\n                      <Form.Group as={Col} md=\"6\" controlId=\"validationFormik102\" className=\"position-relative\">\n                        <Form.Label>Last name</Form.Label>\n                        <Form.Control type=\"text\" name=\"lastName\" value={values.lastName} onChange={handleChange} isValid={touched.lastName && !errors.lastName} />\n                        <Form.Control.Feedback tooltip>Looks good!</Form.Control.Feedback>\n                      </Form.Group>\n                    </Row>\n                    <Row className=\"mb-3\">\n                      <Form.Group as={Col} md=\"6\" controlId=\"validationFormik103\" className=\"position-relative\">\n                        <Form.Label>City</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"City\" name=\"city\" value={values.city} onChange={handleChange} isInvalid={!!errors.city} />\n                        <Form.Control.Feedback type=\"invalid\" tooltip>{errors.city}</Form.Control.Feedback>\n                      </Form.Group>\n                      <Form.Group as={Col} md=\"3\" controlId=\"validationFormik104\" className=\"position-relative \">\n                        <Form.Label>state1</Form.Label>\n                        <Select classNamePrefix=\"Select\" options={state1} placeholder='state1' />\n\n                        <Form.Control.Feedback type=\"invalid\" tooltip> {errors.state1}</Form.Control.Feedback>\n                      </Form.Group>\n                      <Form.Group as={Col} md=\"3\" controlId=\"validationFormik105\" className=\"position-relative\">\n                        <Form.Label>Zip</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Zip\" name=\"zip\" value={values.zip} onChange={handleChange} isInvalid={!!errors.zip} />\n                        <Form.Control.Feedback type=\"invalid\" tooltip>{errors.zip}</Form.Control.Feedback>\n                      </Form.Group>\n                    </Row>\n                    <Button type=\"submit\">Submit form</Button>\n                  </Form>\n                )}\n              </Formik>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      {/* <!-- ROW CLOSED --> */}\n    </div>\n  )\n};\n\nexport default FormValidation;\n"],"names":["props","className","styles","titles","Breadcrumb","items","map","value","index","href","active","useState","validated","setValidated","State","label","schema","Yup","shape","firstName","required","lastName","username","city","state1","zip","file","terms","oneOf","PageHeader","Row","Col","lg","md","Card","as","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","xl","type","placeholder","defaultValue","classNamePrefix","options","feedback","feedbackType","Button","isValid","isInvalid","id","forhtml","name","InputGroup","hasValidation","validationSchema","console","log","initialValues","handleSubmit","handleChange","values","touched","errors","controlId","onChange","tooltip"],"sourceRoot":""}
{"version":3,"file":"static/js/6196.f167d14c.chunk.js","mappings":"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","sources":["../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js"],"sourcesContent":["import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement();\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}"],"names":["activeElement","doc","ownerDocument","active","nodeName","e","body","manager","_excluded","useModalManager","provided","window","useWindow","modalManager","ModalManager","document","getManager","modal","useRef","dialog","backdrop","Object","assign","current","add","remove","isTopModal","setDialogRef","useCallback","ref","setBackdropRef","Modal","forwardRef","_ref","show","role","className","style","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","runTransition","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","_jsx","providedManager","containerRef","container","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","useState","exited","setExited","lastFocusRef","useImperativeHandle","canUseDOM","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","useEffect","useWillUnmount","handleBackdropClick","currentTarget","keyCode","defaultPrevented","dialogProps","undefined","tabIndex","React","renderTransition","unmountOnExit","mountOnEnter","appear","in","backdropElement","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","OPEN_DATA_ATTRIBUTE","dataAttr","handleContainerOverflow","isRTL","this","modals","defaultView","Math","abs","innerWidth","documentElement","clientWidth","getBodyScrollbarWidth","_modal","containerState","overflow","paddingProp","getElement","scrollBarWidth","parseInt","css","setAttribute","forEach","m","removeAttribute","modalIdx","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","addClass","element","classList","hasClass","baseVal","replaceClassName","origClass","classToRemove","replace","RegExp","removeClass","AbstractModalHeader","closeLabel","closeVariant","closeButton","context","useContext","ModalContext","handleClick","CloseButton","variant","defaultProps","sharedManager","Selector","BootstrapModalManager","prop","adjust","actual","dataset","parseFloat","value","marginProp","qsa","el","adjustAndStore","restore","getSharedManager","options","propTypes","PropTypes","type","classNames","_get","Reflect","get","bind","property","receiver","base","object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","arguments","apply"],"sourceRoot":""}
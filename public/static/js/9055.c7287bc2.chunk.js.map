{"version":3,"file":"static/js/9055.c7287bc2.chunk.js","mappings":"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","sources":["Layouts/PageHeader/PageHeader.module.scss","Layouts/PageHeader/PageHeader.jsx","components/pages/forms/FormWizard/FormWizard.module.scss","Data/Pages/Forms/DataFormWizard.jsx","components/pages/forms/FormWizard/FormWizard.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport styles from './PageHeader.module.scss';\nimport { Breadcrumb } from 'react-bootstrap';\n\nconst PageHeader = (props) => {\n\n  return (\n\n    <div className={styles.PageHeader}>\n      {/* <!-- PAGE-HEADER --> */}\n      <div className=\"page-header\">\n        <h1 className=\"page-title\">{props.titles}</h1>\n        <div>\n          <Breadcrumb>\n          {props.items.map((value, index) => {\n          return<Breadcrumb.Item href=\"#\" key={index}>{value}</Breadcrumb.Item>\n        })}\n        <Breadcrumb.Item href=\"#\" active>{props.active}</Breadcrumb.Item>\n          </Breadcrumb>\n        </div>\n      </div>\n      {/* <!-- PAGE-HEADER END --> */}\n    </div>\n  )\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React, { useState, Component, Children, Fragment } from \"react\";\r\nimport Box from '@mui/material/Box';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport Button from '@mui/material/Button';\r\nimport StepContent from \"@mui/material/StepContent\";\r\nimport Typography from '@mui/material/Typography';\r\nimport { Form, ListGroup, Col, Row, InputGroup } from 'react-bootstrap';\r\nimport validator from \"validator\";\r\n\r\n\r\n// Form Wizard\r\n\r\nfunction MyButton({ visible, ...props }) {\r\n  return (\r\n\r\n      <button\r\n          className={visible ? \"btn btn-primary \" : \"invisible\"}\r\n          {...props}\r\n      />\r\n\r\n  );\r\n}\r\nconst Wizard = ({ step: currentIndex, ...props }) => {\r\n  const steps = Children.toArray(props.children);\r\n  const prevStep = currentIndex !== 0 && steps[currentIndex - 1].props;\r\n  const nextStep = currentIndex !== steps.length - 1 && steps[currentIndex + 1].props;\r\n\r\n  return (\r\n      <div>\r\n\r\n          <nav className=\"btn-group steps basicsteps\">\r\n              {steps.map((step, index) => (\r\n                  <button\r\n                      key={step.props.number}\r\n                      onClick={() => props.onChange(index)}\r\n                      className={getClsNavBtn(index === currentIndex)}\r\n                  >\r\n                      <span className=\"number me-2 \">{step.props.number}</span>\r\n                      <span>{step.props.title}</span>\r\n                  </button>\r\n              ))}\r\n          </nav>\r\n\r\n          {steps[currentIndex]}\r\n\r\n          <div className=\" p-3 d-flex justify-content-between  \">\r\n              <MyButton\r\n                  visible={prevStep}\r\n                  onClick={() => props.onChange(currentIndex - 1)}\r\n                  title={prevStep.description}\r\n              >\r\n                  Back\r\n              </MyButton>\r\n              <MyButton\r\n                  visible={nextStep}\r\n                  onClick={() => props.onChange(currentIndex + 1)}\r\n                  title={nextStep.description}\r\n              >\r\n                  Next\r\n              </MyButton>\r\n          </div>\r\n      </div>\r\n  );\r\n};\r\nconst Stepps = ({ children }) => children;\r\n\r\nfunction getClsNavBtn(active) {\r\n  return \"btn\" + (active ? \" active\" : \"\");\r\n}\r\nexport class BasicContent extends Component {\r\n  state = { step: 0 };\r\n\r\n  handleStep = (step) => {\r\n      this.setState({ step });\r\n  };\r\n\r\n  render() {\r\n      return (\r\n          <Wizard step={this.state.step} onChange={this.handleStep}>\r\n              <Stepps title=\"LogIn\" number=\"1\">\r\n                  <section className=\"card-body Basicwizard \">\r\n                      <Form>\r\n                          <Form.Group>\r\n                              <Form.Label>Email address</Form.Label>\r\n                              <Form.Control type=\"email\" id=\"exampleInputEmail6\"\r\n                                  placeholder=\"Enter email address\" />\r\n                          </Form.Group>\r\n                          <Form.Group>\r\n                              <Form.Label>Password</Form.Label>\r\n                              <Form.Control type=\"password\" className=\"form-control\"\r\n                                  id=\"exampleInputPassword7\" placeholder=\"Password\" />\r\n                          </Form.Group>\r\n                          <Form.Group className=\"mt-4 mb-3 justify-content-end\">\r\n                              <Form.Check label='Check me Out' />\r\n                          </Form.Group>\r\n                      </Form>\r\n                  </section>\r\n              </Stepps>\r\n              <Stepps title=\"NewUser\" number=\"2\">\r\n                  <section className=\"card-body Basicwizard\">\r\n                      <Form>\r\n                          <Form.Group>\r\n                              <Form.Label>User Name</Form.Label>\r\n                              <Form.Control type=\"text\" className=\"form-control\" id=\"inputtext\"\r\n                                  placeholder=\"Enter User Name\" />\r\n                          </Form.Group>\r\n                          <Form.Group>\r\n                              <Form.Label>Email address</Form.Label>\r\n                              <Form.Control type=\"email\" className=\"form-control\" id=\"exampleInputEmail8\"\r\n                                  placeholder=\"Enter email address\" />\r\n                          </Form.Group>\r\n                          <Form.Group>\r\n                              <Form.Label>Password</Form.Label>\r\n                              <Form.Control type=\"password\" className=\"form-control\"\r\n                                  id=\"exampleInputPassword9\" placeholder=\"Password\" />\r\n                          </Form.Group>\r\n                          <Form.Group className=\"mt-4 mb-3 justify-content-end\">\r\n                              <Form.Check label='Check me Out' />\r\n                          </Form.Group>\r\n                      </Form>\r\n                  </section>\r\n              </Stepps>\r\n              <Stepps title=\"End\" number=\"3\">\r\n                  <section className=\"card-body Basicwizard \">\r\n                      <Row>\r\n                          <Form>\r\n                              <Form.Group className=\"mt-4 mb-3 d-flex\">\r\n                                  <Form.Check label='I agree terms and Conditions' />\r\n                              </Form.Group>\r\n                          </Form>\r\n                      </Row>\r\n                  </section>\r\n              </Stepps>\r\n          </Wizard>\r\n      );\r\n  }\r\n}\r\n// Accordion-Wizard-Form\r\n\r\nconst steps = [{\r\n  label: \"Name & Email\",\r\n  description: (\r\n    <>\r\n      <ListGroup>\r\n        <ListGroup.Item>\r\n          <Form.Group>\r\n            <Form.Label>Name:</Form.Label>\r\n            <Form.Control type=\"text\" name=\"name\" />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Email:</Form.Label>\r\n            <Form.Control type=\"text\" name=\"email\" />\r\n          </Form.Group>\r\n        </ListGroup.Item>\r\n      </ListGroup>\r\n    </>\r\n  ),\r\n},\r\n{\r\n  label: \"Contact\",\r\n  description: (\r\n    <>\r\n      <ListGroup>\r\n        <ListGroup.Item>\r\n          <Form.Group>\r\n            <Form.Label>Telephone:</Form.Label>\r\n            <Form.Control type=\"text\" name=\"telephone\" className=\"form-control\" />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Mobile:</Form.Label>\r\n            <Form.Control type=\"text\" name=\"mobile\" className=\"form-control\" />\r\n          </Form.Group>\r\n        </ListGroup.Item>\r\n      </ListGroup>\r\n    </>\r\n  ),\r\n},\r\n{\r\n  label: \"Payment\",\r\n  description: (\r\n    <>\r\n      <ListGroup>\r\n        <ListGroup.Item>\r\n          <Form.Group>\r\n            <Form.Label>Credit card:</Form.Label>\r\n            <Form.Control type=\"text\" name=\"card\" />\r\n          </Form.Group>\r\n          <Form.Group className=\"form-row\">\r\n            <Col sm={4}>\r\n              <Form.Label>Expiry:</Form.Label>\r\n              <Form.Control type=\"text\" name=\"expiry\" />\r\n            </Col>\r\n            <Col sm={4}>\r\n              <Form.Label>CVV:</Form.Label>\r\n              <Form.Control type=\"text\" name=\"cvv\" />\r\n            </Col>\r\n          </Form.Group>\r\n        </ListGroup.Item>\r\n      </ListGroup>\r\n    </>\r\n  ),\r\n},];\r\n\r\nexport default function BasicFormWizard() {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [skipped, setSkipped] = useState(new Set());\r\n  const isStepOptional = (step) => {\r\n    return step === 1;\r\n  };\r\n  const isStepSkipped = (step) => {\r\n    return skipped.has(step);\r\n  };\r\n  const handleNext = () => {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  };\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n  const handleSkip = () => {\r\n    if (!isStepOptional(activeStep)) {\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped((prevSkipped) => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  };\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n        {steps.map((label, index) => {\r\n          const stepProps = {}\r\n          // const labelProps: { optional?: ReactNode } = {}\r\n          if (isStepOptional(index)) { }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false\r\n          }\r\n          return (\r\n            <Step key={label.label} {...stepProps}>\r\n              <StepLabel optional={\r\n                index === 2 ? <Typography variant=\"caption\"></Typography> : null\r\n              }>{label.label}</StepLabel>\r\n              <StepContent>\r\n                {label.description}\r\n                <Fragment>\r\n                  <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n                    <Box sx={{ flex: '1 1 auto' }} />\r\n                    <Button onClick={handleReset}>Reset</Button>\r\n                  </Box>\r\n                </Fragment>\r\n              </StepContent>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <Fragment>\r\n        <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n          <Button\r\n            color=\"primary\"\r\n            disabled={activeStep === 0}\r\n            onClick={handleBack}\r\n            sx={{ mr: 1 }}\r\n          >\r\n            Back\r\n          </Button>\r\n          <Box sx={{ flex: '1 1 auto' }} />\r\n          {isStepOptional(activeStep) && (\r\n            <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\r\n              Skip\r\n            </Button>\r\n          )}\r\n          <Button className='ms-auto' color='primary' onClick={handleNext}>\r\n            {activeStep === steps.length - 1 ? 'SUBMIT' : 'Next'}\r\n          </Button>\r\n        </Box>\r\n      </Fragment>\r\n\r\n    </Box>\r\n  );\r\n}\r\n\r\n// Basic Content Wizard\r\n\r\n\r\nexport const BasicContentFormWizard = () => {\r\n  const [goSteps, setGoSteps] = useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <Stepper activeStep={goSteps}>\r\n        <Step onClick={() => setGoSteps(0)} />\r\n        <Step onClick={() => setGoSteps(1)} />\r\n        <Step onClick={() => setGoSteps(2)} />\r\n      </Stepper>\r\n      {goSteps === 0 && (\r\n        <div>\r\n          <span className=\"Stepperh3\">Personal Information</span>\r\n          <section>\r\n            <div className=\"control-group form-group\">\r\n              <label className=\"form-label\">Name</label>\r\n              <input type=\"text\" className=\"form-control required\" placeholder=\"Name\" />\r\n            </div>\r\n            <div className=\"control-group form-group\">\r\n              <label className=\"form-label\">Email</label>\r\n              <input type=\"email\" className=\"form-control required\"\r\n                placeholder=\"Email Address\" />\r\n            </div>\r\n            <div className=\"control-group form-group\">\r\n              <label className=\"form-label\">Phone Number</label>\r\n              <input type=\"number\" className=\"form-control required\" placeholder=\"Number\" />\r\n            </div>\r\n            <div className=\"control-group form-group mb-0\">\r\n              <label className=\"form-label\">Address</label>\r\n              <input type=\"text\" className=\"form-control required\" placeholder=\"Address\" />\r\n            </div>\r\n          </section>\r\n          <button\r\n            className=\"btn btn-primary mt-2 float-end mt-4\"\r\n            onClick={() => setGoSteps(1)}\r\n          >\r\n            Next\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary mt-2 float-start mt-4\"\r\n            onClick={() => setGoSteps(0)}\r\n            disabled\r\n          >\r\n            Previous\r\n          </button>\r\n        </div>\r\n      )}\r\n      {goSteps === 1 && (\r\n        <div>\r\n          <span className=\"Stepperh3\">Billing Information</span>\r\n          <section>\r\n            <div className=\"table-responsive mg-t-20\">\r\n              <table className=\"table table-bordered\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Cart Subtotal</td>\r\n                    <td className=\"text-end\">$792.00</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td><span>Totals</span></td>\r\n                    <td className=\"text-end text-muted\"><span>$792.00</span></td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td><span>Order Total</span></td>\r\n                    <td>\r\n                      <h2 className=\"price text-end mb-0\">$792.00</h2>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </section>\r\n          <div>\r\n            <button\r\n              className=\"btn btn-primary float-end mt-4\"\r\n              onClick={() => setGoSteps(2)}\r\n            >\r\n              Next\r\n            </button>\r\n            <button className=\"btn btn-primary float-start mt-4\" onClick={() => setGoSteps(0)}>\r\n              Previous\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {goSteps === 2 && (\r\n        <div className=\"Paymentdetails\">\r\n          <span className=\"Stepperh3\">Payment Details</span>\r\n          <section>\r\n            <Form.Group>\r\n              <label className=\"form-label\">CardHolder Name</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"name1\"\r\n                placeholder=\"First Name\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <label className=\"form-label\">Card number</label>\r\n              <div className=\"input-group\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Search for...\" />\r\n                <span className=\"input-group-text btn btn-info shadow-none mb-0\">\r\n                  <i className=\"fa fa-cc-visa\"></i> &nbsp; <i\r\n                    className=\"fa fa-cc-amex\"></i> &nbsp;\r\n                  <i className=\"fa fa-cc-mastercard\"></i>\r\n                </span>\r\n              </div>\r\n            </Form.Group>\r\n            <Row>\r\n              <Col sm={8}>\r\n                <Form.Group className=\"mb-sm-0\">\r\n                  <label className=\"form-label\">Expiration</label>\r\n                  <div className=\"input-group\">\r\n                    <input type=\"number\" className=\"form-control\" placeholder=\"MM\"\r\n                      name=\"expiremonth\" />\r\n                    <input type=\"number\" className=\"form-control\" placeholder=\"YY\"\r\n                      name=\"expireyear\" />\r\n                  </div>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col sm={4}>\r\n                <Form.Group className=\"mb-0\">\r\n                  <label className=\"form-label\">CVV <i\r\n                    className=\"fa fa-question-circle\"></i></label>\r\n                  <input type=\"number\" className=\"form-control\" required />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </section>\r\n          <button\r\n            className=\"btn btn-primary float-end mt-4\"\r\n            onClick={() => setGoSteps(0)}\r\n          >\r\n            Submit\r\n          </button>\r\n          <button className=\"btn btn-primary wizer float-start mt-4\" onClick={() => setGoSteps(1)}>\r\n            Previous\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Basic Wizard With Validation\r\n\r\nfunction PersonalInformation({ nextStep, handleFormData, values }) {\r\n  const [error, setError] = useState(false);\r\n  const submitFormData = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      validator.isEmpty(values.firstName) ||\r\n      validator.isEmpty(values.lastName)\r\n    ) {\r\n      setError(true);\r\n    } else {\r\n      nextStep();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"Stepperh3\">Personal Information</span>\r\n      <Form onSubmit={submitFormData}>\r\n        <Row>\r\n          <Col md={5} lg={4}>\r\n            <Form.Group className=\"\">\r\n              <Form.Label className=\"form-control-label\">Firstname: <span className=\"text-danger\">*</span></Form.Label>\r\n              <Form.Control style={{ border: error ? \"2px solid #dc3545\" : \"\" }} name=\"firstName\" defaultValue={values.firstName} type=\"text\" placeholder=\"First Name\" onChange={handleFormData(\"firstName\")} />\r\n              {error ? (<Form.Text style={{ color: \"#dc3545\" }}> This value is required..</Form.Text>) : (\"\")}\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={5} lg={4} className=\"mg-t-20 mg-md-t-0\">\r\n            <Form.Group className=\"\">\r\n              <Form.Label className=\"form-control-label\">Lastname: <span className=\"text-danger\">*</span></Form.Label>\r\n              <Form.Control style={{ border: error ? \"2px solid #dc3545\" : \"\" }} name=\"lastName\" defaultValue={values.lastName} type=\"text\" placeholder=\"Last Name\" onChange={handleFormData(\"lastName\")} />\r\n              {error ? (<Form.Text style={{ color: \"#dc3545\" }}> This value is required.. </Form.Text>) : (\"\")}\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Button className='mt-4' type=\"submit\"> Continue</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction BillingInformation({ nextStep, handleFormData, prevStep, values }) {\r\n\r\n  const [error, setError] = useState(false);\r\n\r\n\r\n  const submitFormData = (e) => {\r\n    e.preventDefault();\r\n\r\n\r\n    if (validator.isEmpty(values.email)) {\r\n      setError(true);\r\n    } else {\r\n      nextStep();\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <span className=\"Stepperh3\">Billing Information</span>\r\n      <span>Wonderful transition effects.</span>\r\n      <Form onSubmit={submitFormData}>\r\n        <Form.Group className=\"wd-xs-300\">\r\n          <Form.Label>Email:<span className=\"text-danger\">*</span> </Form.Label>\r\n\r\n          <Form.Control\r\n            style={{ border: error ? \"2px solid red\" : \"\" }}\r\n            type=\"email\"\r\n            placeholder=\"email\"\r\n            onChange={handleFormData(\"email\")}\r\n          />\r\n          {error ? (\r\n            <Form.Text style={{ color: \"red\" }}>This is a required field</Form.Text>) : (\"\")}\r\n        </Form.Group>\r\n        <div >\r\n          <Button className=\"float-start mt-4\" onClick={prevStep}> Previous </Button>\r\n          <Button className=\"float-end mt-4\" type=\"submit\">Submit </Button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction PaymentDetails({ nextStep, handleFormData, prevStep, values }) {\r\n\r\n  const setError = useState;\r\n\r\n\r\n  const submitFormData = (e) => {\r\n    e.preventDefault();\r\n\r\n\r\n    if (validator.isEmpty(values.email)) {\r\n      setError(true);\r\n    } else {\r\n      nextStep();\r\n    }\r\n  };\r\n\r\n  const submitForm =()=>{\r\n    alert('form submitted sucessfully !!')\r\n   }\r\n  return (\r\n    <div>\r\n      <span className=\"Stepperh3\">Payment Details</span>\r\n      \r\n      <Form onSubmit={submitFormData}>\r\n      <Form.Group>\r\n        <Form.Label>CardHolder Name</Form.Label>\r\n        <Form.Control type=\"text\" placeholder=\"First Name\" required />\r\n\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Card number</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control type=\"number\" placeholder=\"Search for...\" />\r\n          <span className=\"input-group-text btn btn-info shadow-none mb-0\"> <i className=\"fa fa-cc-visa\"></i> &nbsp; <i className=\"fa fa-cc-amex\"></i> &nbsp;<i className=\"fa fa-cc-mastercard\"></i></span>\r\n        </InputGroup>\r\n      </Form.Group>\r\n      <Row>\r\n        <Col sm={8}>\r\n          <Form.Group className=\"mb-sm-0\">\r\n            <Form.Label >Expiration</Form.Label>\r\n            <InputGroup> <Form.Control type=\"number\" placeholder=\"MM\" name=\"expiremonth\" required />\r\n             \r\n              <Form.Control type=\"number\" placeholder=\"YY\" name=\"expireyear\" required />\r\n               \r\n            </InputGroup>\r\n          </Form.Group>\r\n        </Col>\r\n        <Col sm={4}>\r\n          <Form.Group className=\"mb-0\">\r\n            <Form.Label >CVV <i className=\"fa fa-question-circle\"></i></Form.Label>\r\n            <Form.Control type=\"number\" required />\r\n            \r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n\r\n      <div >\r\n        <Button className=\"float-start mt-4\" onClick={prevStep}> Previous </Button>\r\n        <Button className=\"float-end mt-4\" type=\"submit\" onClick={submitForm}>Finish</Button>\r\n      </div>\r\n    </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport function ValidationForm() {\r\n  const [step, setstep] = useState(1);\r\n\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    age: '',\r\n    email: ''\r\n  })\r\n\r\n  const nextStep = () => {\r\n    setstep(step + 1);\r\n  };\r\n\r\n    // function for going to previous step by decreasing step state by 1\r\n  const prevStep = () => {\r\n    setstep(step - 1);\r\n  };\r\n// handling form input data by taking onchange value and updating our previous form data state\r\n  const handleInputData = input => e => {\r\n        // input value from the form\r\n    const { value } = e.target;\r\n\r\n    //updating for data state taking previous state and then adding new value to create new object\r\n    setFormData(prevState => ({ \r\n      ...prevState, \r\n      [input]: value \r\n    }));\r\n    \r\n  }\r\n  switch (step) {\r\n    case 1:\r\n      return (<div className=\"custom-margin\"> <PersonalInformation nextStep={nextStep} handleFormData={handleInputData} values={formData} /></div>);\r\n\r\n    case 2:\r\n      return (<div className=\"custom-margin\"><BillingInformation nextStep={nextStep} prevStep={prevStep} handleFormData={handleInputData} values={formData} /></div>);\r\n\r\n    case 3:\r\n      return (<div className=\"custom-margin\"> <PaymentDetails nextStep={nextStep} prevStep={prevStep} handleFormData={handleInputData} values={formData} /> </div>);\r\n\r\n      default:\r\n        break;\r\n  }\r\n  \r\n}\r\n// Vertical Orientation Wizard\r\n export const VerticalOrientationWizard = () => {\r\n     const [goSteps, setGoSteps] = useState(0);\r\n\r\n     const handleClick=()=>{\r\n      alert('form submitted sucessfully !!')\r\n     }\r\n\r\n     return (\r\n       <div className=\"\">\r\n         <Stepper activeStep={goSteps}>\r\n           <Step onClick={() => setGoSteps(0)} />\r\n           <Step onClick={() => setGoSteps(1)} />\r\n           <Step onClick={() => setGoSteps(2)} />\r\n         </Stepper>\r\n         {goSteps === 0 && (\r\n           <>\r\n           <div className=\"row border\" >\r\n             <div className=\"col-xl-4 border-end\">\r\n             <span className=\"Stepperh3 d-flex p-4\"><span className=\"number step3 me-2\">1</span><span className=\"title \" onClick={() => setGoSteps(0)}>Personal Information</span></span>\r\n             <span className=\"Stepperh3 d-flex p-4\"><span className=\"number step2 me-2\">2</span><span className=\"title Step1\" onClick={() => setGoSteps(1)}>Billing Information</span></span>\r\n             <span className=\"Stepperh3 d-flex p-4\"><span className=\"number step2 me-2\">3</span><span className=\"title Step1\" onClick={() => setGoSteps(2)}>Payment Details</span></span>\r\n             </div>\r\n             <div className=\"col-xl-8 p-4\">\r\n             <section>\r\n               <div className=\"control-group form-group\">\r\n                 <label className=\"form-label\">Name</label>\r\n                 <input type=\"text\" className=\"form-control required\" placeholder=\"Name\" />\r\n               </div>\r\n               <div className=\"control-group form-group\">\r\n                 <label className=\"form-label\">Email</label>\r\n                 <input type=\"email\" className=\"form-control required\"\r\n                   placeholder=\"Email Address\" />\r\n               </div>\r\n               <div className=\"control-group form-group\">\r\n                 <label className=\"form-label\">Phone Number</label>\r\n                 <input type=\"number\" className=\"form-control required\" placeholder=\"Number\" />\r\n               </div>\r\n               <div className=\"control-group form-group mb-0\">\r\n                 <label className=\"form-label\">Address</label>\r\n                 <input type=\"text\" className=\"form-control required\" placeholder=\"Address\" />\r\n               </div>\r\n               <div className=\"control-group form-group mb-0\">\r\n               <label className=\"form-label\">Dropify Single Upload</label>\r\n               <Form.Control type=\"file\" />\r\n               </div>\r\n               <div className=\"control-group form-group mb-0\">\r\n               <label className=\"form-label\">Multiple Fancy Upload</label>\r\n               <Form.Control type=\"file\" multiple/>\r\n               </div>\r\n             </section>\r\n             </div>\r\n             <div className=\"col-xl-4 border-end\"></div>\r\n           <div className=\"col-xl-8 p-4\">\r\n          <button\r\n           className=\"btn btn-primary mt-2 float-end mt-4\"\r\n           onClick={() => setGoSteps(1)}\r\n         >\r\n           Next\r\n         </button>\r\n         <button\r\n           className=\"btn btn-primary mt-2 float-start mt-4\"\r\n           onClick={() => setGoSteps(0)}\r\n           disabled\r\n         >\r\n           Previous\r\n         </button>\r\n         </div>\r\n           </div>\r\n         </>\r\n         )}\r\n         {goSteps === 1 && (\r\n           <div>\r\n           <div className=\"row borders\" >\r\n             <div className=\"col-sm-4 border-right\">\r\n             <span className=\"Stepperh3 d-flex p-4\"><span className=\"number step2 me-2\">1</span><span className=\"title Step1\" onClick={() => setGoSteps(0)}>Personal Information</span></span>\r\n             <span className=\"Stepperh3 d-flex p-4\"><span className=\"number step3 me-2\">2</span><span className=\"title\" onClick={() => setGoSteps(1)}>Billing Information </span></span>\r\n             <span className=\"Stepperh3 d-flex p-4\"><span className=\"number step2 me-2\">3</span><span className=\"title Step1\" onClick={() => setGoSteps(2)}>Payment Details</span></span>\r\n             </div>\r\n             <div className=\"col-sm-8 p-4\">\r\n             <section>\r\n               <div className=\"table-responsive mg-t-20\">\r\n                 <table className=\"table table-bordered\">\r\n                   <tbody>\r\n                     <tr>\r\n                       <td>Cart Subtotal</td>\r\n                       <td className=\"text-end\">$792.00</td>\r\n                     </tr>\r\n                     <tr>\r\n                       <td><span>Totals</span></td>\r\n                       <td className=\"text-end text-muted\"><span>$792.00</span></td>\r\n                     </tr>\r\n                     <tr>\r\n                       <td><span>Order Total</span></td>\r\n                       <td>\r\n                         <h2 className=\"price text-end mb-0\">$792.00</h2>\r\n                       </td>\r\n                     </tr>\r\n                   </tbody>\r\n                 </table>\r\n               </div>\r\n             </section>\r\n             </div>\r\n             <div className=\"col-sm-4 border-right\"></div>\r\n           <div className=\"col-sm-8 p-4\">\r\n               <button\r\n                 className=\"btn btn-primary float-end mt-4\"\r\n                 onClick={() => setGoSteps(2)}\r\n               >\r\n                 Next\r\n               </button>\r\n               <button className=\"btn btn-primary float-start mt-4\" onClick={() => setGoSteps(0)}>\r\n                 Previous\r\n               </button>\r\n             </div>\r\n             </div>\r\n           </div>\r\n          \r\n         )}\r\n         {goSteps === 2 && (\r\n           <>\r\n           <div className=\"row borders\">\r\n             <div className=\"col-sm-4 border-right\">\r\n           <span className=\"Stepperh3 d-flex p-4\"><span className=\"number step2 me-2\">1</span><span className=\"title Step1\" onClick={() => setGoSteps(0)}>Personal Information</span></span>\r\n             <span className=\"Stepperh3 d-flex p-4\"><span className=\"number step2 me-2\">2</span><span className=\"title Step1\" onClick={() => setGoSteps(1)}>Billing Information </span></span>\r\n             <span className=\"Stepperh3 d-flex p-4\"><span className=\"number step3 me-2\">3</span><span className=\"title\" onClick={() => setGoSteps(2)}>Payment Details</span></span>\r\n             </div>\r\n             <div className=\"col-sm-8 p-4\">\r\n             <section>\r\n               <Form.Group>\r\n                 <label className=\"form-label\">CardHolder Name</label>\r\n                 <input type=\"text\" className=\"form-control\" id=\"name1\"\r\n                   placeholder=\"First Name\" />\r\n               </Form.Group>\r\n               <Form.Group>\r\n                 <label className=\"form-label\">Card number</label>\r\n                 <div className=\"input-group\">\r\n                   <input type=\"text\" className=\"form-control\" placeholder=\"Search for...\" />\r\n                   <span className=\"input-group-text btn btn-info shadow-none mb-0\">\r\n                     <i className=\"fa fa-cc-visa\"></i> &nbsp; <i\r\n                       className=\"fa fa-cc-amex\"></i> &nbsp;\r\n                     <i className=\"fa fa-cc-mastercard\"></i>\r\n                   </span>\r\n                 </div>\r\n               </Form.Group>\r\n               <Row>\r\n                 <Col sm={8}>\r\n                   <Form.Group className=\"mb-sm-0\">\r\n                     <label className=\"form-label\">Expiration</label>\r\n                     <div className=\"input-group\">\r\n                       <input type=\"number\" className=\"form-control\" placeholder=\"MM\"\r\n                         name=\"expiremonth\" />\r\n                       <input type=\"number\" className=\"form-control\" placeholder=\"YY\"\r\n                         name=\"expireyear\" />\r\n                     </div>\r\n                   </Form.Group>\r\n                 </Col>\r\n                 <Col sm={4}>\r\n                   <Form.Group className=\"mb-0\">\r\n                     <label className=\"form-label\">CVV <i\r\n                       className=\"fa fa-question-circle\"></i></label>\r\n                     <input type=\"number\" className=\"form-control\" required />\r\n                   </Form.Group>\r\n                 </Col>\r\n               </Row>\r\n             </section>\r\n             </div>\r\n             <div className=\"col-sm-4 border-right\"></div>\r\n   <div className=\"col-sm-8 p-4\">   <button\r\n               className=\"btn btn-primary float-end mt-4\"\r\n               onClick={() =>{ handleClick(); setGoSteps(0)}}\r\n             >\r\n               Submit\r\n             </button>\r\n             <button className=\"btn btn-primary wizer float-start mt-4\" onClick={() => setGoSteps(1)}>\r\n               Previous\r\n             </button></div>\r\n           </div>\r\n           </>\r\n         )}\r\n       </div>\r\n     );\r\n   };\r\n\r\n\r\n","import React from 'react';\nimport styles from './FormWizard.module.scss';\nimport PageHeader from '../../../../Layouts/PageHeader/PageHeader';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport BasicFormWizard, { BasicContent, BasicContentFormWizard, ValidationForm, VerticalOrientationWizard } from '../../../../Data/Pages/Forms/DataFormWizard';\n// import App from '../../../../Data/Pages/Forms/wizardBasic';\n\n\nconst FormWizard = () => {\n\n  return (\n\n  <div className={styles.FormWizard}>\n    <PageHeader titles=\"Form-Wizard\" active=\"Form-Wizard\" items={['Forms']} />\n    {/* <!--Row open--> */}\n    <Row>\n      <Col>\n        <Card>\n          <Card.Header className=\"border-bottom-0\">\n            <Card.Title as='h3'>Form Wizard</Card.Title>\n          </Card.Header>\n          <Card.Body>\n          <BasicContent /> \n\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n    {/* <!--row closed--> */}\n\n    {/* <!--row open--> */}\n    <Row>\n      <Col lg={12}>\n        <Card>\n          <Card.Header className=\"border-bottom-0\">\n            <Card.Title as='h3'>Accordion-Wizard-Form</Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <BasicFormWizard />\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n    {/* <!--row closed--> */}\n    {/* <!-- Row --> */}\n    <Row>\n      <Col md={12}>\n        <Card>\n          <Card.Header className=\"border-bottom-0\">\n            <Card.Title>\n              Basic Content Wizard\n            </Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <BasicContentFormWizard />\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n    {/* <!--/Row --> */}\n\n    {/* <!--Row --> */}\n    <Row>\n      <Col md={12}>\n        <Card>\n          <Card.Header className=\"border-bottom-0\">\n            <Card.Title>\n              Basic Wizard With Validation\n            </Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <ValidationForm />\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n    {/* <!--/Row--> */}\n\n    {/* <!--Row--> */}\n    <Row>\n      <Col md={12}>\n        <Card>\n          <Card.Header className=\"border-bottom-0\">\n            <Card.Title>\n              Vertical Orientation Wizard\n            </Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <VerticalOrientationWizard />\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n    {/* <!-- /Row --> */}\n  </div>\n  \n)\n  };\n\nexport default FormWizard;\n"],"names":["props","className","styles","titles","Breadcrumb","items","map","value","index","href","active","MyButton","visible","Wizard","currentIndex","step","steps","Children","children","prevStep","nextStep","length","onClick","onChange","number","title","description","Stepps","BasicContent","state","handleStep","setState","this","Form","type","id","placeholder","label","Row","Component","ListGroup","name","Col","sm","BasicFormWizard","useState","activeStep","setActiveStep","Set","skipped","setSkipped","isStepOptional","isStepSkipped","has","handleReset","Box","sx","width","Stepper","orientation","stepProps","completed","Step","StepLabel","optional","Typography","variant","StepContent","Fragment","display","flexDirection","pt","flex","Button","color","disabled","prevActiveStep","mr","Error","prevSkipped","newSkipped","values","add","delete","BasicContentFormWizard","goSteps","setGoSteps","required","PersonalInformation","handleFormData","error","setError","onSubmit","e","preventDefault","validator","firstName","lastName","md","lg","style","border","defaultValue","BillingInformation","email","PaymentDetails","InputGroup","alert","ValidationForm","setstep","age","formData","setFormData","handleInputData","input","target","prevState","VerticalOrientationWizard","multiple","PageHeader","Card","as"],"sourceRoot":""}
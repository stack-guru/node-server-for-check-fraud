{"version":3,"file":"static/js/1155.914e4463.chunk.js","mappings":"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","sources":["Layouts/PageHeader/PageHeader.module.scss","Layouts/PageHeader/PageHeader.jsx","components/bootstrap/OffCanvas/OffCanvas.module.scss","components/bootstrap/OffCanvas/OffCanvas.jsx","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport styles from './PageHeader.module.scss';\nimport { Breadcrumb } from 'react-bootstrap';\n\nconst PageHeader = (props) => {\n\n  return (\n\n    <div className={styles.PageHeader}>\n      {/* <!-- PAGE-HEADER --> */}\n      <div className=\"page-header\">\n        <h1 className=\"page-title\">{props.titles}</h1>\n        <div>\n          <Breadcrumb>\n          {props.items.map((value, index) => {\n          return<Breadcrumb.Item href=\"#\" key={index}>{value}</Breadcrumb.Item>\n        })}\n        <Breadcrumb.Item href=\"#\" active>{props.active}</Breadcrumb.Item>\n          </Breadcrumb>\n        </div>\n      </div>\n      {/* <!-- PAGE-HEADER END --> */}\n    </div>\n  )\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React, { useState } from 'react';\nimport { Card, Row, Col, Collapse, Form, Button, Dropdown, Offcanvas } from 'react-bootstrap';\nimport styles from './OffCanvas.module.scss';\nimport PageHeader from '../../../Layouts/PageHeader/PageHeader';\n\nconst OffCanvas = () => {\n\n  const [Basic, setBasic] = useState(false);\n  const [BackDrop, setBackDrop] = useState(false);\n  const [placement, setplacement] = useState(false);\n\n\n  // Default link button OPEN \n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const [show1, setShow1] = useState(false);\n\n  const handleClose1 = () => setShow1(false);\n  const handleShow1 = () => setShow1(true);\n\n\n  // BackDrop offcanvas\n\n  const options = [\n    {\n      name: 'Enable body scrolling',\n      scroll: true,\n      backdrop: false,\n\n    },\n    {\n      name: 'Enable backdrop (default)',\n      scroll: false,\n      backdrop: true,\n\n    },\n    {\n      name: 'Enable both scrolling & backdrop',\n      scroll: true,\n      backdrop: true,\n\n    },\n  ];\n\n  function OffCanvasExample({ name, ...props }) {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const toggleShow = () => setShow((s) => !s);\n\n    return (\n      <>\n        <Button variant=\"primary\" onClick={toggleShow} className=\"me-2\">\n          {name}\n        </Button>\n        <Offcanvas show={show} onHide={handleClose} {...props}>\n          <Offcanvas.Header>\n            <Offcanvas.Title><b>Colored with scrolling</b></Offcanvas.Title>\n            <span className=\"d-flex ms-auto\" onClick={handleClose}><i className='fe fe-x ms-auto'></i></span>\n          </Offcanvas.Header>\n          <Offcanvas.Body>\n            Try scrolling the rest of the page to see this option in action.<br /><br />\n            It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.\n          </Offcanvas.Body>\n        </Offcanvas>\n      </>\n    );\n  }\n\n\n  // Placement Offcanvas\n\n  function OffCanvasplacement({ name, ...props }) {\n    const [show2, setShow2] = useState(false);\n\n    const handleClose = () => setShow2(false);\n    const handleShow = () => setShow2(true);\n\n    return (\n      <>\n        <Button variant=\"primary\" onClick={handleShow} className=\"me-2\">\n          {name}\n        </Button>\n        <Offcanvas show={show2} onHide={handleClose} {...props}>\n          <Offcanvas.Header>\n            <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n            <span className=\"d-flex ms-auto\" onClick={handleClose}><i className='fe fe-x ms-auto'></i></span>\n          </Offcanvas.Header>\n          <Offcanvas.Body>\n            Some text as placeholder. In real life you can have the elements you\n            have chosen. Like, text, images, lists, etc.\n          </Offcanvas.Body>\n        </Offcanvas>\n      </>\n    );\n  }\n  return (\n\n    <div className={styles.OffCanvas}>\n      <PageHeader titles=\"Offcanvas\" active=\"Offcanvas\" items={['Apps']} />\n\n      {/* <!-- Row --> */}\n      <Row>\n        <Col md={12} xl={6}>\n          <Card>\n            <Card.Header>\n              <Card.Title>Default Offcanvas</Card.Title>\n              <Form className=\"ms-auto\">\n                <Form.Check type=\"switch\" label=\"Show Code\" id=\"custom-switch\" onClick={() => setBasic(!Basic)} className=\"showcode d-flex ms-auto mx-2\" />\n              </Form>\n            </Card.Header>\n            <Card.Body>\n              <div className=\"btn-list\">\n                {/* <Defaultlink /> */}\n                <Button variant=\"primary\" onClick={handleShow}>\n                  Link with href\n                </Button>\n\n                <Offcanvas show={show} onHide={handleClose}>\n                  <Offcanvas.Header>\n                    <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n                    <span className=\"d-flex ms-auto\" onClick={handleClose}><i className='fe fe-x ms-auto'></i></span>\n                  </Offcanvas.Header>\n\n                  <Offcanvas.Body>\n                    Some text as placeholder. In real life you can have the elements you\n                    have chosen. Like, text, images, lists, etc.\n                    <Dropdown className=\"mt-5\">\n                      <Dropdown.Toggle>\n                        Dropdown button\n                      </Dropdown.Toggle>\n                      <Dropdown.Menu>\n                        <Dropdown.Item eventkey=\"1\">Action</Dropdown.Item>\n                        <Dropdown.Item eventkey=\"2\">Another Action</Dropdown.Item>\n                        <Dropdown.Item eventkey=\"3\">Something else</Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </Offcanvas.Body>\n                </Offcanvas>\n\n\n                <Button variant=\"primary\" onClick={handleShow1}>\n                  Button with data-bs-target\n                </Button>\n\n                <Offcanvas show={show1} onHide={handleClose1}>\n                  <Offcanvas.Header>\n                    <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n                    <span className=\"d-flex ms-auto\" onClick={handleClose1}><i className='fe fe-x ms-auto'></i></span>\n                  </Offcanvas.Header>\n\n                  <Offcanvas.Body>\n                    Some text as placeholder. In real life you can have the elements you\n                    have chosen. Like, text, images, lists, etc.\n                    <Dropdown className=\"mt-5\">\n                      <Dropdown.Toggle>\n                        Dropdown button\n                      </Dropdown.Toggle>\n                      <Dropdown.Menu>\n                        <Dropdown.Item eventkey=\"1\">Action</Dropdown.Item>\n                        <Dropdown.Item eventkey=\"2\">Another Action</Dropdown.Item>\n                        <Dropdown.Item eventkey=\"3\">Something else</Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </Offcanvas.Body>\n                </Offcanvas>\n              </div>\n              <Collapse in={Basic} className=\"mt-2\">\n                <pre>\n                  <code>\n                    {`\n export function Defaultlink() {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Link with href\n      </Button>\n\n      <Offcanvas show={show} onHide={handleClose}>\n        <Offcanvas.Header>\n          <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n          <span className=\"d-flex ms-auto\" onClick={handleClose}><i className='fe fe-x ms-auto'></i></span>\n        </Offcanvas.Header>\n\n        <Offcanvas.Body>\n          Some text as placeholder. In real life you can have the elements you\n          have chosen. Like, text, images, lists, etc.\n          <Dropdown className=\"mt-5\">\n            <Dropdown.Toggle>\n              Dropdown button\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item eventkey=\"1\">Action</Dropdown.Item>\n              <Dropdown.Item eventkey=\"2\">Another Action</Dropdown.Item>\n              <Dropdown.Item eventkey=\"3\">Something else</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Offcanvas.Body>\n      </Offcanvas>\n    </>\n  );\n}\n\n\nexport function Databutton() {\n  const [show, setShow] = useState(false);\n\n  const handleClose1 = () => setShow(false);\n  const handleShow1 = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow1}>\n        Button with data-bs-target\n      </Button>\n\n      <Offcanvas show={show} onHide={handleClose1}>\n        <Offcanvas.Header>\n          <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n          <span className=\"d-flex ms-auto\" onClick={handleClose1}><i className='fe fe-x ms-auto'></i></span>\n        </Offcanvas.Header>\n\n        <Offcanvas.Body>\n          Some text as placeholder. In real life you can have the elements you\n          have chosen. Like, text, images, lists, etc.\n          <Dropdown className=\"mt-5\">\n            <Dropdown.Toggle>\n              Dropdown button\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item eventkey=\"1\">Action</Dropdown.Item>\n              <Dropdown.Item eventkey=\"2\">Another Action</Dropdown.Item>\n              <Dropdown.Item eventkey=\"3\">Something else</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Offcanvas.Body>\n      </Offcanvas>\n    </>\n  );\n}\n`}\n                  </code>\n                </pre>\n              </Collapse>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={12} xl={6}>\n          <Card>\n            <Card.Header>\n              <Card.Title>BackDrop Offcanvas</Card.Title>\n              <Form className=\"ms-auto\">\n                <Form.Check type=\"switch\" label=\"Show Code\" id=\"custom-switch\" onClick={() => setBackDrop(!BackDrop)} className=\"showcode d-flex ms-auto mx-2\" />\n              </Form>\n            </Card.Header>\n            <Card.Body>\n              <div className=\"btn-list\">\n\n                {options.map((props, idx) => (\n                  <OffCanvasExample key={idx} {...props} />\n                ))}\n              </div>\n              <Collapse in={BackDrop} className=\"mt-2\">\n                <pre>\n                  <code>\n                    {`\nexport function Backdrop() {\n  return (\n    <>\n      {options.map((props, idx) => (\n        <OffCanvasExample key={idx} {...props} />\n      ))}\n    </>\n  );\n}\n\n`}\n                  </code>\n                </pre>\n              </Collapse>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={12}>\n          <Card>\n            <Card.Header>\n              <Card.Title>Placement Offcanvas</Card.Title>\n              <Form className=\"ms-auto\">\n                <Form.Check type=\"switch\" label=\"Show Code\" id=\"custom-switch\" onClick={() => setplacement(!placement)} className=\"showcode d-flex ms-auto mx-2\" />\n              </Form>\n            </Card.Header>\n            <Card.Body>\n              <div className=\"btn-list\">\n                {['top', 'end', 'bottom'].map((placement, idx) => (\n                  <OffCanvasplacement key={idx} placement={placement} name={`Toggle ${placement} Offcanvas `} />\n                ))}\n              </div>\n              <Collapse in={placement} className=\"mt-2\">\n                <pre>\n                  <code>\n                    {`\nexport function Placementbutton() {\n  return (\n    <>\n      {['top', 'end', 'bottom'].map((placement, idx) => (\n        <OffCanvasplacement key={idx} placement={placement} name={Toggle {placement} Offcanvas } />\n      ))}\n    </>\n  );\n}\n\n`}\n                  </code>\n                </pre>\n              </Collapse>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      {/* <!-- End Row --> */}\n    </div>\n  )\n};\n\nexport default OffCanvas;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  linkProps: {}\n};\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = Anchor,\n  linkProps,\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, {\n      ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", {\n      ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});"],"names":["props","className","styles","titles","Breadcrumb","items","map","value","index","href","active","useState","Basic","setBasic","BackDrop","setBackDrop","placement","setplacement","show","setShow","handleClose","show1","setShow1","handleClose1","OffCanvasExample","name","Button","variant","onClick","s","Offcanvas","onHide","OffCanvasplacement","show2","setShow2","PageHeader","Row","Col","md","xl","Card","Form","type","label","id","Dropdown","eventkey","Collapse","in","scroll","backdrop","idx","BreadcrumbItem","React","ref","bsPrefix","children","as","Component","linkAs","LinkComponent","Anchor","linkProps","title","target","prefix","useBootstrapPrefix","_jsx","classNames","undefined","displayName","defaultProps","listProps","Object","assign","Item"],"sourceRoot":""}
{"version":3,"file":"static/js/1114.fe638d6b.chunk.js","mappings":"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","sources":["Layouts/PageHeader/PageHeader.module.scss","Layouts/PageHeader/PageHeader.jsx","components/pages/tables/EditTable/EditTable.module.scss","Data/Pages/TablesData/DataEditable.jsx","components/pages/tables/EditTable/EditTable.jsx","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport styles from './PageHeader.module.scss';\nimport { Breadcrumb } from 'react-bootstrap';\n\nconst PageHeader = (props) => {\n\n  return (\n\n    <div className={styles.PageHeader}>\n      {/* <!-- PAGE-HEADER --> */}\n      <div className=\"page-header\">\n        <h1 className=\"page-title\">{props.titles}</h1>\n        <div>\n          <Breadcrumb>\n          {props.items.map((value, index) => {\n          return<Breadcrumb.Item href=\"#\" key={index}>{value}</Breadcrumb.Item>\n        })}\n        <Breadcrumb.Item href=\"#\" active>{props.active}</Breadcrumb.Item>\n          </Breadcrumb>\n        </div>\n      </div>\n      {/* <!-- PAGE-HEADER END --> */}\n    </div>\n  )\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React, { Fragment, useState } from 'react';\r\nimport { Button, Form, Modal } from 'react-bootstrap';\r\nimport { nanoid } from \"nanoid\";\r\n\r\n\r\n// Basic Edit Table\r\n\r\nexport const BasicEditTable = () => {\r\n  const data = [\r\n    {\r\n      id: 1,\r\n      fullName: \"Bella Chloe\",\r\n      position: \"System Developer\",\r\n      salary: \"$654,765\",\r\n      email: \"b.Chloe@datatables.net\",\r\n    },\r\n    {\r\n      id: 2,\r\n      fullName: \"Donna Bond\",\r\n      position: \"Account Manager\",\r\n      salary: \"\t$543,654\",\r\n      email: \"d.bond@datatables.net\",\r\n    },\r\n    {\r\n      id: 3,\r\n      fullName: \"Harry\tCarr\",\r\n      position: \"Technical Manager\",\r\n      salary: \"$86,000\",\r\n      email: \"h.carr@datatables.net\",\r\n    },\r\n    {\r\n      id: 4,\r\n      fullName: \"Lucas Dyer\",\r\n      position: \"Javascript Developer\",\r\n      salary: \"$456,123\",\r\n      email: \"l.dyer@datatables.net\",\r\n    },\r\n    {\r\n      id: 5,\r\n      fullName: \"Karen Hill\",\r\n      position: \"Sales Manager\",\r\n      salary: \"$432,230\",\r\n      email: \"k.hill@datatables.net\",\r\n    },\r\n    {\r\n      id: 6,\r\n      fullName: \"Dominic Hudson\",\r\n      position: \"Sales Assistant\",\r\n      salary: \"$654,300\",\r\n      email: \"d.hudson@datatables.net\",\r\n    },\r\n  ];\r\n  const [contacts, setContacts] = useState(data);\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    fullName: \"\",\r\n    position: \"\",\r\n    salary: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const [editContactId, setEditContactId] = useState(null);\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedContact = {\r\n      id: editContactId,\r\n      fullName: editFormData.fullName,\r\n      position: editFormData.position,\r\n      salary: editFormData.salary,\r\n      email: editFormData.email,\r\n    };\r\n\r\n    const newContacts = [...contacts];\r\n\r\n    const index = contacts.findIndex((contact) => contact.id === editContactId);\r\n\r\n    newContacts[index] = editedContact;\r\n\r\n    setContacts(newContacts);\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleEditClick = (event, contact) => {\r\n    event.preventDefault();\r\n    setEditContactId(contact.id);\r\n\r\n    const formValues = {\r\n      fullName: contact.fullName,\r\n      position: contact.position,\r\n      salary: contact.salary,\r\n      email: contact.email,\r\n    };\r\n\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (contactId) => {\r\n    const newContacts = [...contacts];\r\n\r\n    const index = contacts.findIndex((contact) => contact.id === contactId);\r\n\r\n    newContacts.splice(index, 1);\r\n\r\n    setContacts(newContacts);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <form onSubmit={handleEditFormSubmit}>\r\n        <table\r\n          id=\"delete-datatable\"\r\n          className=\"table table-bordered text-nowrap border-bottom\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>position</th>\r\n              <th>Salary</th>\r\n              <th>Email</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {contacts.map((contact) => (\r\n              <Fragment key={contact.id}>\r\n                {editContactId === contact.id ? (\r\n                  <EditableRows\r\n                    editFormData={editFormData}\r\n                    handleEditFormChange={handleEditFormChange}\r\n                    handleCancelClick={handleCancelClick}\r\n                  />\r\n                ) : (\r\n                  <ReadOnlyRows\r\n                    contact={contact}\r\n                    handleEditClick={handleEditClick}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n\r\n      {/* <h2>Add a Contact</h2> */}\r\n\r\n    </div>\r\n  );\r\n};\r\nconst EditableRows = ({\r\n  editFormData,\r\n  handleEditFormChange,\r\n  handleCancelClick,\r\n}) => {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <input\r\n          className='form-control'\r\n          type=\"text\"\r\n          required\r\n          placeholder=\"Enter a name...\"\r\n          name=\"fullName\"\r\n          value={editFormData.fullName}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          className='form-control'\r\n          type=\"text\"\r\n          required\r\n          placeholder=\"Enter an position...\"\r\n          name=\"position\"\r\n          value={editFormData.position}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          className='form-control'\r\n          type=\"text\"\r\n          required\r\n          placeholder=\"Enter a phone number...\"\r\n          name=\"salary\"\r\n          value={editFormData.salary}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          className='form-control'\r\n          type=\"email\"\r\n          required\r\n          placeholder=\"Enter an email...\"\r\n          name=\"email\"\r\n          value={editFormData.email}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <Button variant=\"\" className=\"btn btn-primary me-1\" type=\"submit\">\r\n          Save\r\n        </Button>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"btn btn-danger me-1\"\r\n\r\n          onClick={handleCancelClick}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\nconst ReadOnlyRows = ({ contact, handleEditClick, handleDeleteClick }) => {\r\n  return (\r\n    <tr>\r\n      <td>{contact.fullName}</td>\r\n      <td>{contact.position}</td>\r\n      <td>{contact.salary}</td>\r\n      <td>{contact.email}</td>\r\n      <td>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"btn btn-primary me-1\"\r\n          type=\"button\"\r\n          onClick={(event) => handleEditClick(event, contact)}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"btn btn-danger me-1\"\r\n          type=\"button\"\r\n          onClick={() => handleDeleteClick(contact.id)}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\n\r\n\r\n// Add New Row with Edit Table\r\nexport const Savetable = () => {\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const data = [\r\n    {\r\n      id: 1,\r\n      fullName: \"Bella Chloe\",\r\n      position: \"System Developer\",\r\n      start: \"2018/03/12\",\r\n      salary: \"$654,765\",\r\n      email: \"b.Chloe@datatables.net\",\r\n    },\r\n    {\r\n      id: 2,\r\n      fullName: \"Donna Bond\",\r\n      position: \"Account Manager\",\r\n      start: \"2012/02/21\",\r\n      salary: \"\t$543,654\",\r\n      email: \"d.bond@datatables.net\",\r\n    },\r\n    {\r\n      id: 3,\r\n      fullName: \"Harry Carr\",\r\n      position: \"Technical Manager\",\r\n      start: \"2011/02/17\",\r\n      salary: \"$86,000\",\r\n      email: \"h.carr@datatables.net\",\r\n    },\r\n    {\r\n      id: 4,\r\n      fullName: \"Lucas Dyer\",\r\n      position: \"Javascript Developer\",\r\n      start: \"2014/08/23\",\r\n      salary: \"$456,123\",\r\n      email: \"l.dyer@datatables.net\",\r\n    },\r\n    {\r\n      id: 5,\r\n      fullName: \"Karen Hill\",\r\n      position: \"Sales Manager\",\r\n      start: \"2010/7/14\",\r\n      salary: \"$432,230\",\r\n      email: \"k.hill@datatables.net\",\r\n    },\r\n    {\r\n      id: 6,\r\n      fullName: \"Dominic Hudson\",\r\n      position: \"Sales Assistant\",\r\n      start: \"2015/10/16\",\r\n      salary: \"$654,300\",\r\n      email: \"d.hudson@datatables.net\",\r\n    },\r\n  ];\r\n  const [contacts, setContacts] = useState(data);\r\n  const [addFormData, setAddFormData] = useState({\r\n    fullName: \"\",\r\n    position: \"\",\r\n    start: \"\",\r\n    salary: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    fullName: \"\",\r\n    position: \"\",\r\n    start: \"\",\r\n    salary: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const [editContactId, setEditContactId] = useState(null);\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setAddFormData(newFormData);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newContact = {\r\n      id: nanoid(),\r\n      fullName: addFormData.fullName,\r\n      position: addFormData.position,\r\n      start: addFormData.start,\r\n      salary: addFormData.salary,\r\n      email: addFormData.email,\r\n    };\r\n\r\n    const newContacts = [...contacts, newContact];\r\n    setContacts(newContacts);\r\n  };\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedContact = {\r\n      id: editContactId,\r\n      fullName: editFormData.fullName,\r\n      position: editFormData.position,\r\n      start: addFormData.start,\r\n      salary: editFormData.salary,\r\n      email: editFormData.email,\r\n    };\r\n\r\n    const newContacts = [...contacts];\r\n\r\n    const index = contacts.findIndex((contact) => contact.id === editContactId);\r\n\r\n    newContacts[index] = editedContact;\r\n\r\n    setContacts(newContacts);\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleEditClick = (event, contact) => {\r\n    event.preventDefault();\r\n    setEditContactId(contact.id);\r\n\r\n    const formValues = {\r\n      fullName: contact.fullName,\r\n      position: contact.position,\r\n      start: contact.start,\r\n      salary: contact.salary,\r\n      email: contact.email,\r\n    };\r\n\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (contactId) => {\r\n    const newContacts = [...contacts];\r\n\r\n    const index = contacts.findIndex((contact) => contact.id === contactId);\r\n\r\n    newContacts.splice(index, 1);\r\n\r\n    setContacts(newContacts);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container table-responsive\">\r\n      <form onSubmit={handleEditFormSubmit}>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"btn btn-primary mb-3\"\r\n          onClick={() => setModalShow(true)}\r\n        >\r\n          Add New Row\r\n        </Button>\r\n        <table\r\n          id=\"delete-datatable\"\r\n          className=\"table table-bordered text-nowrap border-bottom\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>position</th>\r\n              <th>Salary</th>\r\n              <th>Start Date</th>\r\n              <th>Email</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {contacts.map((contact) => (\r\n              <Fragment key={contact.id}>\r\n                {editContactId === contact.id ? (\r\n                  <EditableRow\r\n                    editFormData={editFormData}\r\n                    handleEditFormChange={handleEditFormChange}\r\n                    handleCancelClick={handleCancelClick}\r\n                  />\r\n                ) : (\r\n                  <ReadOnlyRow\r\n                    contact={contact}\r\n                    handleEditClick={handleEditClick}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">Add New Row</Modal.Title>\r\n          <Button\r\n            variant=\"\"\r\n            className=\"btn btn-close\"\r\n            onClick={() => setModalShow(false)}\r\n          >\r\n          </Button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={handleAddFormSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"fullName\"\r\n              required\r\n              placeholder=\"Enter a name...\"\r\n              onChange={handleAddFormChange}\r\n              className=\"form-control mb-2\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"position\"\r\n              required\r\n              placeholder=\"Enter an addres...\"\r\n              onChange={handleAddFormChange}\r\n              className=\"form-control mb-2\"\r\n            />\r\n            {/* <input\r\n              type=\"date\"\r\n              name=\"Start Date\"\r\n              required\r\n              \r\n              onChange={handleAddFormChange}\r\n              className=\"form-control mb-2\"\r\n            /> */}\r\n            <input\r\n              type=\"number\"\r\n              name=\"salary\"\r\n              required\r\n              placeholder=\"Enter a phone number...\"\r\n              onChange={handleAddFormChange}\r\n              className=\"form-control mb-2\"\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              required\r\n              placeholder=\"Enter an email...\"\r\n              onChange={handleAddFormChange}\r\n              className=\"form-control mb-2\"\r\n            />\r\n            <Button variant=\"\" className=\"btn btn-primary me-2\" type=\"submit\">\r\n              Add\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => setModalShow(false)}\r\n          >\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nconst EditableRow = ({\r\n  editFormData,\r\n  handleEditFormChange,\r\n  handleCancelClick,\r\n\r\n}) => {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <input\r\n          className='form-control'\r\n          type=\"text\"\r\n          required\r\n          placeholder=\"Enter a name...\"\r\n          name=\"fullName\"\r\n          value={editFormData.fullName}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          className='form-control'\r\n          type=\"text\"\r\n          required\r\n          placeholder=\"Enter an position...\"\r\n          name=\"position\"\r\n          value={editFormData.position}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          className='form-control'\r\n          type=\"number\"\r\n          required\r\n          placeholder=\"Enter salary...\"\r\n          name=\"salary\"\r\n          value={editFormData.salary}\r\n          onChange={handleEditFormChange}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          className='form-control'\r\n          type=\"date\"\r\n          required\r\n          placeholder=\"Enter start date...\"\r\n          name=\"Start Date\"\r\n          value={editFormData.start}\r\n          onChange={handleEditFormChange}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          className='form-control'\r\n          type=\"email\"\r\n          required\r\n          placeholder=\"Enter an email...\"\r\n          name=\"email\"\r\n          value={editFormData.email}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <Button variant=\"\" className=\"btn btn-primary me-1\" type=\"submit\">\r\n          Save\r\n        </Button>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"btn btn-danger me-1\"\r\n\r\n          onClick={handleCancelClick}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\nconst ReadOnlyRow = ({ contact, handleEditClick, handleDeleteClick }) => {\r\n  return (\r\n    <tr>\r\n      <td>{contact.fullName}</td>\r\n      <td>{contact.position}</td>\r\n      <td>{contact.start}</td>\r\n      <td>{contact.salary}</td>\r\n      <td>{contact.email}</td>\r\n      <td>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"btn btn-primary me-1\"\r\n          type=\"button\"\r\n          onClick={(event) => handleEditClick(event, contact)}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"btn btn-danger me-1\"\r\n          type=\"button\"\r\n          onClick={() => handleDeleteClick(contact.id)}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\n\r\n","import React from 'react';\nimport styles from './EditTable.module.scss';\nimport PageHeader from '../../../../Layouts/PageHeader/PageHeader';\nimport { Col, Row, Card } from 'react-bootstrap';\nimport { BasicEditTable, Savetable } from '../../../../Data/Pages/TablesData/DataEditable';\n\nconst EditTable = () => {\n  return (\n  <div className={styles.EditTable}>\n    <PageHeader titles=\"Editor-Table\" active=\"Editor-Table\" items={['Tables']} />\n    {/* <!-- Row --> */}\n    <Row>\n      <Col lg={12}>\n        <Card>\n          <Card.Header>\n            <Card.Title as='h3'>Basic Edit Table</Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <div className=\"table-responsive\">\n              <BasicEditTable />\n            </div>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n    {/* <!-- End Row --> */}\n\n    {/* <!-- Row --> */}\n    <div className=\"row\">\n      <Col lg={12}>\n        <Card>\n          <Card.Header>\n            <Card.Title as='h3'>Add New Row with Edit Table</Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <Savetable />\n          </Card.Body>\n        </Card>\n      </Col>\n    </div>\n    {/* <!-- End Row --> */}\n  </div>\n)\n  };\n\nexport default EditTable;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["props","className","styles","titles","Breadcrumb","items","map","value","index","href","active","BasicEditTable","useState","id","fullName","position","salary","email","contacts","setContacts","editFormData","setEditFormData","editContactId","setEditContactId","handleEditFormChange","event","preventDefault","fieldName","target","getAttribute","fieldValue","newFormData","handleEditClick","contact","formValues","handleCancelClick","handleDeleteClick","contactId","newContacts","findIndex","splice","onSubmit","editedContact","Fragment","EditableRows","ReadOnlyRows","type","required","placeholder","name","onChange","Button","variant","onClick","Savetable","React","modalShow","setModalShow","start","addFormData","setAddFormData","handleAddFormChange","EditableRow","ReadOnlyRow","Modal","show","onHide","size","centered","Form","newContact","nanoid","PageHeader","Row","Col","lg","Card","as","ref","bsPrefix","Component","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName"],"sourceRoot":""}